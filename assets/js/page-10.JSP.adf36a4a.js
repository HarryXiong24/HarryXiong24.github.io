(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{481:function(t,e,a){t.exports=a.p+"assets/img/7.a0b3ec1e.jpg"},482:function(t,e,a){t.exports=a.p+"assets/img/8.0413e34f.png"},698:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"jsp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsp"}},[t._v("#")]),t._v(" JSP")]),t._v(" "),s("h3",{attrs:{id:"_10-1-jsp生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-jsp生命周期"}},[t._v("#")]),t._v(" 10.1 JSP生命周期")]),t._v(" "),s("p",[t._v("理解JSP底层功能的关键就是去理解它们所遵守的生命周期。")]),t._v(" "),s("p",[t._v("JSP生命周期就是从创建到销毁的整个过程，类似于servlet生命周期，区别在于JSP生命周期还包括将JSP文件编译成servlet。")]),t._v(" "),s("p",[t._v("以下是JSP生命周期中所走过的几个阶段：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("编译阶段：")])]),t._v(" "),s("p",[t._v("servlet容器编译servlet源文件，生成servlet类")])]),t._v(" "),s("li",[s("p",[t._v("初始化阶段：")]),t._v(" "),s("p",[t._v("加载与JSP对应的servlet类，创建其实例，并调用它的初始化方法")])]),t._v(" "),s("li",[s("p",[t._v("执行阶段：")]),t._v(" "),s("p",[t._v("调用与JSP对应的servlet实例的服务方法")])]),t._v(" "),s("li",[s("p",[t._v("销毁阶段：")]),t._v(" "),s("p",[t._v("调用与JSP对应的servlet实例的销毁方法，然后销毁servlet实例")])])]),t._v(" "),s("p",[t._v("很明显，JSP生命周期的四个主要阶段和servlet生命周期非常相似，下面给出图示：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(481),alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"_10-1-1-jsp编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-1-jsp编译"}},[t._v("#")]),t._v(" 10.1.1 JSP编译")]),t._v(" "),s("p",[t._v("当浏览器请求JSP页面时，JSP引擎会首先去检查是否需要编译这个文件。如果这个文件没有被编译过，或者在上次编译后被更改过，则编译这个JSP文件。")]),t._v(" "),s("p",[t._v("编译的过程包括三个步骤：")]),t._v(" "),s("ul",[s("li",[t._v("解析JSP文件。")]),t._v(" "),s("li",[t._v("将JSP文件转为servlet。")]),t._v(" "),s("li",[t._v("编译servlet。")])]),t._v(" "),s("h4",{attrs:{id:"_10-1-2-jsp初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-2-jsp初始化"}},[t._v("#")]),t._v(" 10.1.2 JSP初始化")]),t._v(" "),s("p",[t._v("容器载入JSP文件后，它会在为请求提供任何服务前调用jspInit()方法。如果您需要执行自定义的JSP初始化任务，复写jspInit()方法就行了，就像下面这样：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jspInit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("一般来讲程序只初始化一次，servlet也是如此。通常情况下您可以在jspInit()方法中初始化数据库连接、打开文件和创建查询表。")]),t._v(" "),s("h4",{attrs:{id:"_10-1-3-jsp执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-3-jsp执行"}},[t._v("#")]),t._v(" 10.1.3 JSP执行")]),t._v(" "),s("p",[t._v("这一阶段描述了JSP生命周期中一切与请求相关的交互行为，直到被销毁。")]),t._v(" "),s("p",[t._v("当JSP网页完成初始化后，JSP引擎将会调用_jspService()方法。")]),t._v(" "),s("p",[t._v("_jspService()方法需要一个HttpServletRequest对象和一个HttpServletResponse对象作为它的参数，就像下面这样：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_jspService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务端处理代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("_jspService()方法在每个request中被调用一次并且负责产生与之相对应的response，并且它还负责产生所有7个HTTP方法的回应，比如GET、POST、DELETE等等。")]),t._v(" "),s("h4",{attrs:{id:"_10-1-4-jsp清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-4-jsp清理"}},[t._v("#")]),t._v(" 10.1.4 JSP清理")]),t._v(" "),s("p",[t._v("JSP生命周期的销毁阶段描述了当一个JSP网页从容器中被移除时所发生的一切。")]),t._v(" "),s("p",[t._v("jspDestroy()方法在JSP中等价于servlet中的销毁方法。当您需要执行任何清理工作时复写jspDestroy()方法，比如释放数据库连接或者关闭文件夹等等。")]),t._v(" "),s("p",[t._v("jspDestroy()方法的格式如下：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jspDestroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清理代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"_10-2-jsp指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-jsp指令"}},[t._v("#")]),t._v(" 10.2 JSP指令")]),t._v(" "),s("h4",{attrs:{id:"_10-2-1-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-1-指令"}},[t._v("#")]),t._v(" 10.2.1 指令")]),t._v(" "),s("p",[t._v("JSP指令用来设置整个JSP页面相关的属性，如网页的编码方式和脚本语言。")]),t._v(" "),s("p",[t._v("语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<%@ directive attribute="value" %>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("指令可以有很多个属性，它们以键值对的形式存在，并用逗号隔开。")]),t._v(" "),s("p",[t._v("JSP中的三种指令标签：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("指令")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("描述")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<%@ page ... %>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义网页依赖属性，比如脚本语言、error页面、缓存需求等等")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<%@ include ... %>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含其他文件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<%@ taglib ... %>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("引入标签库的定义")])])])]),t._v(" "),s("h4",{attrs:{id:"_10-2-2-page指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-2-page指令"}},[t._v("#")]),t._v(" 10.2.2 Page指令")]),t._v(" "),s("p",[t._v("Page指令为容器提供当前页面的使用说明。一个JSP页面可以包含多个page指令。")]),t._v(" "),s("p",[t._v("Page指令的语法格式：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<%@ page attribute="value" %>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("等价的XML格式：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:directive.page attribute="value" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("属性")])]),t._v(" "),s("p",[t._v("下表列出与Page指令相关的属性：说")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("属性")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("描述")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("buffer")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定out对象使用缓冲区的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("autoFlush")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("控制out对象的 缓存区")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("contentType")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定当前JSP页面的MIME类型和字符编码")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("errorPage")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定当JSP页面发生异常时需要转向的错误处理页面")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("isErrorPage")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定当前页面是否可以作为另一个JSP页面的错误处理页面")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("extends")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定servlet从哪一个类继承")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("import")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("导入要使用的Java类")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("info")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义JSP页面的描述信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("isThreadSafe")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定对JSP页面的访问是否为线程安全")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("language")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义JSP页面所用的脚本语言，默认是Java")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("session")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定JSP页面是否使用session")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("isELIgnored")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定是否执行EL表达式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("isScriptingEnabled")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("确定脚本元素能否被使用")])])])]),t._v(" "),s("h4",{attrs:{id:"_10-2-3-include指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-3-include指令"}},[t._v("#")]),t._v(" 10.2.3 Include指令")]),t._v(" "),s("p",[t._v("JSP可以通过include指令来包含其他文件。被包含的文件可以是JSP文件、HTML文件或文本文件。包含的文件就好像是该JSP文件的一部分，会被同时编译执行。")]),t._v(" "),s("p",[t._v("Include指令的语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<%@ include file="relative url" %>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Include指令中的文件名实际上是一个相对的URL。如果您没有给文件关联一个路径，JSP编译器默认在当前路径下寻找。")]),t._v(" "),s("p",[t._v("等价的XML语法：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:directive.include file="relative url" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"_10-2-4-taglib指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-4-taglib指令"}},[t._v("#")]),t._v(" 10.2.4 Taglib指令")]),t._v(" "),s("p",[t._v("JSP API允许用户自定义标签，一个自定义标签库就是自定义标签的集合。")]),t._v(" "),s("p",[t._v("Taglib指令引入一个自定义标签集合的定义，包括库路径、自定义标签。")]),t._v(" "),s("p",[t._v("Taglib指令的语法：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<%@ taglib uri="uri" prefix="prefixOfTag" %>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("uri属性确定标签库的位置，prefix属性指定标签库的前缀。")]),t._v(" "),s("p",[t._v("等价的XML语法：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:directive.taglib uri="uri" prefix="prefixOfTag" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_10-3-jsp-动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-jsp-动作元素"}},[t._v("#")]),t._v(" 10.3 JSP 动作元素")]),t._v(" "),s("p",[t._v("与JSP指令元素不同的是，JSP动作元素在请求处理阶段起作用。JSP动作元素是用XML语法写成的。")]),t._v(" "),s("p",[t._v("利用JSP动作可以动态地插入文件、重用JavaBean组件、把用户重定向到另外的页面、为Java插件生成HTML代码。")]),t._v(" "),s("p",[t._v("动作元素只有一种语法，它符合XML标准：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:action_name attribute="value" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("动作元素基本上都是预定义的函数，JSP规范定义了一系列的标准动作，它用JSP作为前缀，可用的标准动作元素如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:include")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在页面被请求的时候引入一个文件。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:useBean")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("寻找或者实例化一个JavaBean。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:setProperty")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置JavaBean的属性。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:getProperty")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("输出某个JavaBean的属性。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:forward")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("把请求转到一个新的页面。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:plugin")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据浏览器类型为Java插件生成OBJECT或EMBED标记。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:element")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义动态XML元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:attribute")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置动态定义的XML元素属性。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:body")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置动态定义的XML元素内容。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsp:text")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在JSP页面和文档中使用写入文本的模板")])])])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-3-1-常见的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-1-常见的属性"}},[t._v("#")]),t._v(" 10.3.1 常见的属性")]),t._v(" "),s("p",[t._v("所有的动作要素都有两个属性：id属性和scope属性。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("id属性：")]),t._v(" "),s("p",[t._v("id属性是动作元素的唯一标识，可以在JSP页面中引用。动作元素创建的id值可以通过PageContext来调用。")])]),t._v(" "),s("li",[s("p",[t._v("scope属性：")]),t._v(" "),s("p",[t._v("该属性用于识别动作元素的生命周期。 id属性和scope属性有直接关系，scope属性定义了相关联id对象的寿命。 scope属性有四个可能的值： (a) page, (b)request, (c)session, 和 (d) application。")])])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-3-2-jsp-include动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-2-jsp-include动作元素"}},[t._v("#")]),t._v(" 10.3.2 "),s("a",{attrs:{href:"jsp:include"}},[t._v("jsp:include")]),t._v("动作元素")]),t._v(" "),s("p",[s("a",{attrs:{href:"jsp:include"}},[t._v("jsp:include")]),t._v("动作元素用来包含静态和动态的文件。该动作把指定文件插入正在生成的页面。语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:include page="relative URL" flush="true" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("前面已经介绍过include指令，它是在JSP文件被转换成Servlet的时候引入文件，而这里的jsp:include动作不同，插入文件的时间是在页面被请求的时候。")]),t._v(" "),s("p",[t._v("以下是include动作相关的属性列表。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("page")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含在页面中的相对URL地址。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("flush")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("布尔属性，定义在包含资源前是否刷新缓存区。")])])])]),t._v(" "),s("h4",{attrs:{id:"_10-3-3-jsp-usebean动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-3-jsp-usebean动作元素"}},[t._v("#")]),t._v(" 10.3.3 "),s("a",{attrs:{href:"jsp:useBean"}},[t._v("jsp:useBean")]),t._v("动作元素")]),t._v(" "),s("p",[t._v("jsp:useBean动作用来装载一个将在JSP页面中使用的JavaBean。")]),t._v(" "),s("p",[t._v("这个功能非常有用，因为它使得我们既可以发挥Java组件重用的优势，同时也避免了损失JSP区别于Servlet的方便性。")]),t._v(" "),s("p",[t._v("jsp:useBean动作最简单的语法为：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:useBean id="name" class="package.class" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在类载入后，我们既可以通过 jsp:setProperty 和 jsp:getProperty 动作来修改和检索bean的属性。")]),t._v(" "),s("p",[t._v("以下是useBean动作相关的属性列表。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("class")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定Bean的完整包名。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("type")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定将引用该对象变量的类型。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("beanName")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("通过 java.beans.Beans 的 instantiate() 方法指定Bean的名字。")])])])]),t._v(" "),s("p",[t._v("在给出具体实例前，让我们先来看下 jsp:setProperty 和 jsp:getProperty 动作元素：")]),t._v(" "),s("h4",{attrs:{id:"_10-3-4-jsp-setproperty动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-4-jsp-setproperty动作元素"}},[t._v("#")]),t._v(" 10.3.4 "),s("a",{attrs:{href:"jsp:setProperty"}},[t._v("jsp:setProperty")]),t._v("动作元素")]),t._v(" "),s("p",[t._v("jsp:setProperty用来设置已经实例化的Bean对象的属性，有两种用法。首先，你可以在jsp:useBean元素的外面（后面）使用jsp:setProperty，如下所示：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:useBean id="myName" ... />\n...\n<jsp:setProperty name="myName" property="someProperty" .../>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("此时，不管jsp:useBean是找到了一个现有的Bean，还是新创建了一个Bean实例，jsp:setProperty都会执行。第二种用法是把jsp:setProperty放入jsp:useBean元素的内部，如下所示：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:useBean id="myName" ... >\n...\n   <jsp:setProperty name="myName" property="someProperty" .../>\n</jsp:useBean>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("此时，jsp:setProperty只有在新建Bean实例时才会执行，如果是使用现有实例则不执行jsp:setProperty。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("name属性是必需的。它表示要设置属性的是哪个Bean。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("property")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('property属性是必需的。它表示要设置哪个属性。有一个特殊用法：如果property的值是"*"，表示所有名字和Bean属性名字匹配的请求参数都将被传递给相应的属性set方法。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('value 属性是可选的。该属性用来指定Bean属性的值。字符串数据会在目标类中通过标准的valueOf方法自动转换成数字、boolean、Boolean、 byte、Byte、char、Character。例如，boolean和Boolean类型的属性值（比如"true"）通过 Boolean.valueOf转换，int和Integer类型的属性值（比如"42"）通过Integer.valueOf转换。 　　value和param不能同时使用，但可以使用其中任意一个。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("param")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("param 是可选的。它指定用哪个请求参数作为Bean属性的值。如果当前请求没有参数，则什么事情也不做，系统不会把null传递给Bean属性的set方法。因此，你可以让Bean自己提供默认属性值，只有当请求参数明确指定了新值时才修改默认属性值。")])])])]),t._v(" "),s("h4",{attrs:{id:"_10-3-5-jsp-getproperty动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-5-jsp-getproperty动作元素"}},[t._v("#")]),t._v(" 10.3.5 "),s("a",{attrs:{href:"jsp:getProperty"}},[t._v("jsp:getProperty")]),t._v("动作元素")]),t._v(" "),s("p",[t._v("jsp:getProperty动作提取指定Bean属性的值，转换成字符串，然后输出。语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:useBean id="myName" ... />\n...\n<jsp:getProperty name="myName" property="someProperty" .../>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("下表是与getProperty相关联的属性：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("要检索的Bean属性名称。Bean必须已定义。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("property")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("表示要提取Bean属性的值")])])])]),t._v(" "),s("h4",{attrs:{id:"_10-3-6-jsp-forward-动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-6-jsp-forward-动作元素"}},[t._v("#")]),t._v(" 10.3.6 "),s("a",{attrs:{href:"jsp:forward"}},[t._v("jsp:forward")]),t._v(" 动作元素")]),t._v(" "),s("p",[t._v("jsp:forward动作把请求转到另外的页面。jsp:forward标记只有一个属性page。语法格式如下所示：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:forward page="Relative URL" />\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("以下是forward相关联的属性：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("page")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("page属性包含的是一个相对URL。page的值既可以直接给出，也可以在请求的时候动态计算，可以是一个JSP页面或者一个 Java Servlet.")])])])]),t._v(" "),s("h4",{attrs:{id:"_10-3-7-jsp-plugin动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-7-jsp-plugin动作元素"}},[t._v("#")]),t._v(" 10.3.7 "),s("a",{attrs:{href:"jsp:plugin"}},[t._v("jsp:plugin")]),t._v("动作元素")]),t._v(" "),s("p",[t._v("jsp:plugin动作用来根据浏览器的类型，插入通过Java插件 运行Java Applet所必需的OBJECT或EMBED元素。")]),t._v(" "),s("p",[t._v("如果需要的插件不存在，它会下载插件，然后执行Java组件。 Java组件可以是一个applet或一个JavaBean。")]),t._v(" "),s("p",[t._v("plugin动作有多个对应HTML元素的属性用于格式化Java 组件。param元素可用于向Applet 或 Bean 传递参数。")]),t._v(" "),s("p",[t._v("以下是使用plugin 动作元素的典型实例:")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:plugin type="applet" codebase="dirname" code="MyApplet.class"                            width="60" height="80">\n   <jsp:param name="fontcolor" value="red" />\n   <jsp:param name="background" value="black" />\n \n   <jsp:fallback>\n      Unable to initialize Java Plugin\n   </jsp:fallback>\n \n</jsp:plugin>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("如果你有兴趣可以尝试使用applet来测试jsp:plugin动作元素，"),s("code",[t._v("<fallback>")]),t._v("元素是一个新元素，在组件出现故障的错误是发送给用户错误信息。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-3-8-jsp-element-、-jsp-attribute-、-jsp-body-动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-8-jsp-element-、-jsp-attribute-、-jsp-body-动作元素"}},[t._v("#")]),t._v(" 10.3.8 "),s("code",[t._v("<jsp:element>")]),t._v(" 、 "),s("code",[t._v("<jsp:attribute>")]),t._v("、 "),s("code",[t._v("<jsp:body>")]),t._v("动作元素")]),t._v(" "),s("p",[s("code",[t._v("<jsp:element>")]),t._v(" 、 "),s("code",[t._v("<jsp:attribute>")]),t._v("、 "),s("code",[t._v("<jsp:body>")]),t._v("动作元素动态定义XML元素。动态是非常重要的，这就意味着XML元素在编译时是动态生成的而非静态。")]),t._v(" "),s("p",[t._v("以下实例动态定义了XML元素：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<%@page language="java" contentType="text/html"%>\n<html xmlns="http://www.w3c.org/1999/xhtml"       xmlns:jsp="http://java.sun.com/JSP/Page">\n\n<head><title>Generate XML Element</title></head>\n<body>\n<jsp:element name="xmlElement">\n<jsp:attribute name="xmlElementAttr">\n   Value for the attribute\n</jsp:attribute>\n<jsp:body>\n   Body for XML element\n</jsp:body>\n</jsp:element>\n</body>\n</html>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("执行时生成HTML代码如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<html xmlns="http://www.w3c.org/1999/xhtml"       xmlns:jsp="http://java.sun.com/JSP/Page">\n \n<head><title>Generate XML Element</title></head>\n<body>\n<xmlElement xmlElementAttr="Value for the attribute">\n   Body for XML element\n</xmlElement>\n</body>\n</html>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"_10-3-9-jsp-text-动作元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-9-jsp-text-动作元素"}},[t._v("#")]),t._v(" 10.3.9 "),s("code",[t._v("<jsp:text>")]),t._v("动作元素")]),t._v(" "),s("p",[s("code",[t._v("<jsp:text>")]),t._v("动作元素允许在JSP页面和文档中使用写入文本的模板，语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<jsp:text>Template data</jsp:text>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("以上文本模板不能包含其他元素，只能只能包含文本和EL表达式（注：EL表达式将在后续章节中介绍）。请注 意，在XML文件中，您不能使用表达式如 ${whatever > 0}，因为>符号是非法的。 你可以使用 ${whatever gt 0}表达式或者嵌入在一个CDATA部分的值。")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<jsp:text><![CDATA[<br>]]></jsp:text>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果你需要在 XHTML 中声明 DOCTYPE,必须使用到"),s("code",[t._v("<jsp:text>")]),t._v("动作元素，实例如下：")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<jsp:text><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd">]]>\n</jsp:text>\n<head><title>jsp:text action</title></head>\n<body>\n\n<books><book><jsp:text>  \n    Welcome to JSP Programming\n</jsp:text></book></books>\n\n</body>\n</html>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("你可以对以上实例尝试使用 "),s("code",[t._v("<jsp:text>")]),t._v("及不使用该动作元素执行结果的区别。")]),t._v(" "),s("h3",{attrs:{id:"_10-4-jsp-隐式对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-jsp-隐式对象"}},[t._v("#")]),t._v(" 10.4 JSP 隐式对象")]),t._v(" "),s("p",[t._v("JSP隐式对象是JSP容器为每个页面提供的Java对象，开发者可以直接使用它们而不用显式声明。JSP隐式对象也被称为预定义变量。")]),t._v(" "),s("p",[t._v("JSP所支持的九大隐式对象：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("对象")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("描述")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("request")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("HttpServletRequest")]),t._v("类的实例")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("response")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("HttpServletResponse")]),t._v("类的实例")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("out")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("PrintWriter")]),t._v("类的实例，用于把结果输出至网页上")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("session")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("HttpSession")]),t._v("类的实例")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("application")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("ServletContext")]),t._v("类的实例，与应用上下文有关")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("config")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("ServletConfig")]),t._v("类的实例")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("pageContext")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("PageContext")]),t._v("类的实例，提供对JSP页面所有对象以及命名空间的访问")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("page")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类似于Java类中的this关键字")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Exception")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("Exception")]),t._v("类的对象，代表发生错误的JSP页面中对应的异常对象")])])])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-1-request对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-1-request对象"}},[t._v("#")]),t._v(" 10.4.1 request对象")]),t._v(" "),s("p",[t._v("request对象是javax.servlet.http.HttpServletRequest 类的实例。每当客户端请求一个JSP页面时，JSP引擎就会制造一个新的request对象来代表这个请求。")]),t._v(" "),s("p",[t._v("request对象提供了一系列方法来获取HTTP头信息，cookies，HTTP方法等等。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-2-response对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-2-response对象"}},[t._v("#")]),t._v(" 10.4.2 response对象")]),t._v(" "),s("p",[t._v("response对象是javax.servlet.http.HttpServletResponse类的实例。当服务器创建request对象时会同时创建用于响应这个客户端的response对象。")]),t._v(" "),s("p",[t._v("response对象也定义了处理HTTP头模块的接口。通过这个对象，开发者们可以添加新的cookies，时间戳，HTTP状态码等等。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-3-out对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-3-out对象"}},[t._v("#")]),t._v(" 10.4.3 out对象")]),t._v(" "),s("p",[t._v("out对象是 javax.servlet.jsp.JspWriter 类的实例，用来在response对象中写入内容。")]),t._v(" "),s("p",[t._v("最初的JspWriter类对象根据页面是否有缓存来进行不同的实例化操作。可以在page指令中使用buffered='false'属性来轻松关闭缓存。")]),t._v(" "),s("p",[t._v("JspWriter类包含了大部分java.io.PrintWriter类中的方法。不过，JspWriter新增了一些专为处理缓存而设计的方法。还有就是，JspWriter类会抛出IOExceptions异常，而PrintWriter不会。")]),t._v(" "),s("p",[t._v("下表列出了我们将会用来输出boolean，char，int，double，Srtring，object等类型数据的重要方法：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("方法")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("描述")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("out.print(dataType dt)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("输出Type类型的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("out.println(dataType dt)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("输出Type类型的值然后换行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("out.flush()")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("刷新输出流")])])])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-4-session对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-4-session对象"}},[t._v("#")]),t._v(" 10.4.4 session对象")]),t._v(" "),s("p",[t._v("session对象是 javax.servlet.http.HttpSession 类的实例。和Java Servlets中的session对象有一样的行为。")]),t._v(" "),s("p",[t._v("session对象用来跟踪在各个客户端请求间的会话。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-5-application对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-5-application对象"}},[t._v("#")]),t._v(" 10.4.5 application对象")]),t._v(" "),s("p",[t._v("application对象直接包装了servlet的ServletContext类的对象，是javax.servlet.ServletContext 类的实例。")]),t._v(" "),s("p",[t._v("这个对象在JSP页面的整个生命周期中都代表着这个JSP页面。这个对象在JSP页面初始化时被创建，随着jspDestroy()方法的调用而被移除。")]),t._v(" "),s("p",[t._v("通过向application中添加属性，则所有组成您web应用的JSP文件都能访问到这些属性。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-6-config对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-6-config对象"}},[t._v("#")]),t._v(" 10.4.6 config对象")]),t._v(" "),s("p",[t._v("config对象是 javax.servlet.ServletConfig 类的实例，直接包装了servlet的ServletConfig类的对象。")]),t._v(" "),s("p",[t._v("这个对象允许开发者访问Servlet或者JSP引擎的初始化参数，比如文件路径等。")]),t._v(" "),s("p",[t._v("以下是config对象的使用方法，不是很重要，所以不常用：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("它返回包含在"),s("code",[t._v("<servlet-name>")]),t._v("元素中的servlet名字，注意，"),s("code",[t._v("<servlet-name>")]),t._v("元素在 WEB-INF\\web.xml 文件中定义。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-7-pagecontext-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-7-pagecontext-对象"}},[t._v("#")]),t._v(" 10.4.7 pageContext 对象")]),t._v(" "),s("p",[t._v("pageContext对象是javax.servlet.jsp.PageContext 类的实例，用来代表整个JSP页面。")]),t._v(" "),s("p",[t._v("这个对象主要用来访问页面信息，同时过滤掉大部分实现细节。")]),t._v(" "),s("p",[t._v("这个对象存储了request对象和response对象的引用。application对象，config对象，session对象，out对象可以通过访问这个对象的属性来导出。")]),t._v(" "),s("p",[t._v("pageContext对象也包含了传给JSP页面的指令信息，包括缓存信息，ErrorPage URL,页面scope等。")]),t._v(" "),s("p",[t._v("PageContext类定义了一些字段，包括PAGE_SCOPE，REQUEST_SCOPE，SESSION_SCOPE， APPLICATION_SCOPE。它也提供了40余种方法，有一半继承自javax.servlet.jsp.JspContext 类。")]),t._v(" "),s("p",[t._v('其中一个重要的方法就是removeArribute()，它可接受一个或两个参数。比如，pageContext.removeArribute("attrName")移除四个scope中相关属性，但是下面这种方法只移除特定scope中的相关属性：')]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("pageContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"attrName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PAGE_SCOPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-8-page-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-8-page-对象"}},[t._v("#")]),t._v(" 10.4.8 page 对象")]),t._v(" "),s("p",[t._v("这个对象就是页面实例的引用。它可以被看做是整个JSP页面的代表。")]),t._v(" "),s("p",[t._v("page 对象就是this对象的同义词。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_10-4-9-exception-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-9-exception-对象"}},[t._v("#")]),t._v(" 10.4.9 exception 对象")]),t._v(" "),s("p",[t._v("exception 对象包装了从先前页面中抛出的异常信息。它通常被用来产生对出错条件的适当响应。")]),t._v(" "),s("h3",{attrs:{id:"_10-5-el语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-el语法"}},[t._v("#")]),t._v(" 10.5 EL语法")]),t._v(" "),s("h4",{attrs:{id:"_10-5-1-语法格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-1-语法格式"}},[t._v("#")]),t._v(" 10.5.1 语法格式")]),t._v(" "),s("p",[s("strong",[t._v("${ expression }")])]),t._v(" "),s("p",[t._v("要在页面中输出，则可用${}")]),t._v(" "),s("p",[t._v("{“Hello World”}")]),t._v(" "),s("h4",{attrs:{id:"_10-5-2-el隐含对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-2-el隐含对象"}},[t._v("#")]),t._v(" 10.5.2 EL隐含对象")]),t._v(" "),s("p",[s("img",{attrs:{src:a(482),alt:"image-20200407211445131"}})]),t._v(" "),s("h3",{attrs:{id:"_10-6-jstl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-jstl"}},[t._v("#")]),t._v(" 10.6 JSTL")]),t._v(" "),s("h4",{attrs:{id:"_10-6-1-引入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-1-引入"}},[t._v("#")]),t._v(" 10.6.1 引入")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"_10-6-2-常用标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-2-常用标签"}},[t._v("#")]),t._v(" 10.6.2 常用标签")]),t._v(" "),s("p",[s("code",[t._v("<c:out>")]),t._v("\t用于在JSP中显示数据，就像<%= ... >\n"),s("code",[t._v("<c:set>")]),t._v("\t用于保存数据\n"),s("code",[t._v("<c:remove>")]),t._v("\t用于删除数据\n"),s("code",[t._v("<c:catch>")]),t._v("\t用来处理产生错误的异常状况，并且将错误信息储存起来\n"),s("code",[t._v("<c:if>")]),t._v("\t与我们在一般程序中用的if一样\n"),s("code",[t._v("<c:choose>")]),t._v("\t本身只当做"),s("code",[t._v("<c:when>")]),t._v("和"),s("code",[t._v("<c:otherwise>")]),t._v("的父标签\n"),s("code",[t._v("<c:when>")]),t._v(" "),s("code",[t._v("<c:choose>")]),t._v("的子标签，用来判断条件是否成立\n"),s("code",[t._v("<c:otherwise>")]),t._v(" "),s("code",[t._v("<c:choose>")]),t._v("的子标签，接在"),s("code",[t._v("<c:when>")]),t._v("标签后，当"),s("code",[t._v("<c:when>")]),t._v("标签判断为false时被执行\n"),s("code",[t._v("<c:import>")]),t._v("\t检索一个绝对或相对 URL，然后将其内容暴露给页面\n"),s("code",[t._v("<c:forEach>")]),t._v("\t基础迭代标签，接受多种集合类型\n"),s("code",[t._v("<c:forTokens>")]),t._v("\t根据指定的分隔符来分隔内容并迭代输出\n"),s("code",[t._v("<c:param>")]),t._v("\t用来给包含或重定向的页面传递参数\n"),s("code",[t._v("<c:redirect>")]),t._v("\t重定向至一个新的URL.\n"),s("code",[t._v("<c:url>")]),t._v("\t使用可选的查询参数来创造一个URL")])])}),[],!1,null,null,null);e.default=n.exports}}]);