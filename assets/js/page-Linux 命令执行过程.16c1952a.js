(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{962:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"linux-命令执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-命令执行过程"}},[s._v("#")]),s._v(" Linux 命令执行过程")]),s._v(" "),t("p",[s._v("前面讲过，在 Linux 系统中“一切皆文件”，Linux 命令也不例外。那么，当编辑完成 Linux 命令并回车后，系统底层到底发生了什么事情呢？")]),s._v(" "),t("p",[s._v("简单来说，Linux 命令的执行过程分为如下 4 个步骤。")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("判断路径")]),s._v(" "),t("p",[s._v("判断用户是否以绝对路径或相对路径的方式输入命令(如 "),t("code",[s._v("/bin/ls")]),s._v(")，如果是的话直接执行。")])]),s._v(" "),t("li",[t("p",[s._v("检查别名")]),s._v(" "),t("p",[s._v("Linux 系统会检查用户输入的命令是否为 “别名命令”。要知道，通过 alias 命令是可以给现有命令自定义别名的，即用一个自定义的命令名称来替换原本的命令名称。")]),s._v(" "),t("p",[s._v("例如，我们经常使用的 "),t("code",[s._v("rm")]),s._v(" 命令，其实就是 "),t("code",[s._v("rm -i")]),s._v(" 这个整体的别名:")]),s._v(" "),t("div",{staticClass:"language-shell-session line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell-session"}},[t("code",[t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("alias rm='rm -i'\n")])])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("这使得当使用 rm 命令删除指定文件时，Linux 系统会要求我们再次确认是否执行删除操作。例如:")]),s._v(" "),t("div",{staticClass:"language-shell-session line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell-session"}},[t("code",[t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" a.txt ")])]),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("<-- 假定当前目录中已经存在 a.txt 文件\nrm: remove regular file 'a.txt'? y  <-- 手动输入 y，即确定删除\n")]),t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("#\n")])])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("这里可以使用 "),t("code",[s._v("unalias")]),s._v(" 命令，将 Linux 系统设置的 "),t("code",[s._v("rm")]),s._v(" 别名删除掉，执行命令如下:")]),s._v(" "),t("div",{staticClass:"language-shell-session line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell-session"}},[t("code",[t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("alias rm='rm -i'\n")]),t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unalias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" a.txt")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[s._v(" ")])]),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("<--直接删除，不再询问\n")])])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("判断是内部命令还是外部命令")]),s._v(" "),t("p",[s._v("Linux 命令行解释器 (又称为 Shell) 会判断用户输入的命令是内部命令还是外部命令。其中，内部命令指的是解释器内部的命令，会被直接执行；而用户通常输入的命令都是外部命令，这些命令交给步骤四继续处理。\n内部命令由 Shell 自带，会随着系统启动，可以直接从内存中读取；而外部命令仅是在系统中有对应的可执行文件，执行时需要读取该文件。")]),s._v(" "),t("p",[s._v("判断一个命令属于内部命令还是外部命令，可以使用 "),t("code",[s._v("type")]),s._v(" 命令实现。例如:")]),s._v(" "),t("div",{staticClass:"language-shell-session line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell-session"}},[t("code",[t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("pwd is a shell builtin  <-- pwd是内部命令\n")]),t("span",{pre:!0,attrs:{class:"token info punctuation"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token command"}},[t("span",{pre:!0,attrs:{class:"token shell-symbol important"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token bash language-bash"}},[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token output"}},[s._v("top is /usr/bin/top  <-- top是外部命令\n")])])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("查找外部命令对应的可执行文件")]),s._v(" "),t("p",[s._v("当用户执行的是外部命令时，系统会在指定的多个路径中查找该命令的可执行文件，而定义这些路径的变量，就称为 PATH 环境变量，其作用就是告诉 Shell 待执行命令的可执行文件可能存放的位置，也就是说，Shell 会在 PATH 变量包含的多个路径中逐个查找，直到找到为止(如果找不到，Shell 会提供用户“找不到此命令”)。")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);