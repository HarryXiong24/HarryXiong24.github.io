(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{707:function(t,s,e){"use strict";e.r(s);var a=e(1),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"会话管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#会话管理"}},[t._v("#")]),t._v(" 会话管理")]),t._v(" "),e("h3",{attrs:{id:"_7-1-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-cookie"}},[t._v("#")]),t._v(" 7.1 Cookie")]),t._v(" "),e("h4",{attrs:{id:"_7-1-1-servlet-cookie-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-1-servlet-cookie-方法"}},[t._v("#")]),t._v(" 7.1.1 Servlet Cookie 方法")]),t._v(" "),e("p",[t._v("以下是在 Servlet 中操作 Cookie 时可使用的有用的方法列表。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("方法 & 描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setDomain(String pattern)")]),t._v(" 该方法设置 cookie 适用的域，例如 runoob.com。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public String getDomain()")]),t._v(" 该方法获取 cookie 适用的域，例如 runoob.com。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setMaxAge(int expiry)")]),t._v(" 该方法设置 cookie 过期的时间（以秒为单位）。如果不这样设置，cookie 只会在当前 session 会话中持续有效。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public int getMaxAge()")]),t._v(" 该方法返回 cookie 的最大生存周期（以秒为单位），默认情况下，-1 表示 cookie 将持续下去，直到浏览器关闭。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public String getName()")]),t._v(" 该方法返回 cookie 的名称。名称在创建后不能改变。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setValue(String newValue)")]),t._v(" 该方法设置与 cookie 关联的值。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public String getValue()")]),t._v(" 该方法获取与 cookie 关联的值。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setPath(String uri)")]),t._v(" 该方法设置 cookie 适用的路径。如果您不指定路径，与当前页面相同目录下的（包括子目录下的）所有 URL 都会返回 cookie。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public String getPath()")]),t._v(" 该方法获取 cookie 适用的路径。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setSecure(boolean flag)")]),t._v(" 该方法设置布尔值，表示 cookie 是否应该只在加密的（即 SSL）连接上发送。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setComment(String purpose)")]),t._v(" 设置cookie的注释。该注释在浏览器向用户呈现 cookie 时非常有用。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("12")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public String getComment()")]),t._v(" 获取 cookie 的注释，如果 cookie 没有注释则返回 null。")])])])]),t._v(" "),e("h4",{attrs:{id:"_7-1-2-通过-servlet-设置-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-2-通过-servlet-设置-cookie"}},[t._v("#")]),t._v(" 7.1.2 通过 Servlet 设置 Cookie")]),t._v(" "),e("p",[t._v("通过 Servlet 设置 Cookie 包括三个步骤：")]),t._v(" "),e("p",[t._v("**(1) 创建一个 Cookie 对象：**您可以调用带有 cookie 名称和 cookie 值的 Cookie 构造函数，cookie 名称和 cookie 值都是字符串。")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),t._v(" cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("请记住，无论是名字还是值，都不应该包含空格或以下任何字符：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(' " '),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" @ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("**(2) 设置最大生存周期：**您可以使用 setMaxAge 方法来指定 cookie 能够保持有效的时间（以秒为单位）。下面将设置一个最长有效期为 24 小时的 cookie。")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("cookie"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxAge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("**(3) 发送 Cookie 到 HTTP 响应头：**您可以使用 "),e("strong",[t._v("response.addCookie")]),t._v(" 来添加 HTTP 响应头中的 Cookie，如下所示：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addCookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookie"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h4",{attrs:{id:"_7-1-3-通过-servlet-读取-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-3-通过-servlet-读取-cookie"}},[t._v("#")]),t._v(" 7.1.3 通过 Servlet 读取 Cookie")]),t._v(" "),e("p",[t._v("要读取 Cookie，您需要通过调用 "),e("code",[t._v("HttpServletRequest")]),t._v(" 的 "),e("code",[t._v("getCookies()")]),t._v(" 方法创建一个 "),e("code",[t._v("javax.servlet.http.Cookie")]),t._v("对象的数组。然后循环遍历数组，并使用 getName() 和 getValue() 方法来访问每个 cookie 和关联的值。")]),t._v(" "),e("p",[t._v("一般通过循环来遍历cookie")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookies "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),t._v(" cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cookies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cookie的名字")]),t._v("\n    \tcookie"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cookie的值")]),t._v("\n    \tcookie"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h4",{attrs:{id:"_7-1-4-通过-servlet-删除-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-4-通过-servlet-删除-cookie"}},[t._v("#")]),t._v(" 7.1.4 通过 Servlet 删除 Cookie")]),t._v(" "),e("p",[t._v("删除 Cookie 是非常简单的。如果您想删除一个 cookie，那么您只需要按照以下三个步骤进行：")]),t._v(" "),e("ul",[e("li",[t._v("读取一个现有的 cookie，并把它存储在 Cookie 对象中。")]),t._v(" "),e("li",[t._v("使用 "),e("strong",[t._v("setMaxAge()")]),t._v(" 方法设置 cookie 的年龄为零，来删除现有的 cookie。")]),t._v(" "),e("li",[t._v("把这个 cookie 添加到响应头。")])]),t._v(" "),e("h3",{attrs:{id:"_7-2-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-session"}},[t._v("#")]),t._v(" 7.2 Session")]),t._v(" "),e("h4",{attrs:{id:"_7-2-1-seeion对象及其主要方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-1-seeion对象及其主要方法"}},[t._v("#")]),t._v(" 7.2.1 Seeion对象及其主要方法")]),t._v(" "),e("p",[t._v("Servlet 提供了 HttpSession 接口，该接口提供了一种跨多个页面请求或访问网站时识别用户以及存储有关用户信息的方式。")]),t._v(" "),e("p",[t._v("Servlet 容器使用这个接口来创建一个 HTTP 客户端和 HTTP 服务器之间的 session 会话。会话持续一个指定的时间段，跨多个连接或页面请求。")]),t._v(" "),e("p",[t._v("您会通过调用 HttpServletRequest 的公共方法 "),e("strong",[t._v("getSession()")]),t._v(" 来获取 HttpSession 对象，如下所示：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSession")]),t._v(" session "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("你需要在向客户端发送任何文档内容之前调用 "),e("em",[t._v("request.getSession()")]),t._v("。下面总结了 HttpSession 对象中可用的几个重要的方法：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("方法 & 描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public Object getAttribute(String name)")]),t._v(" 该方法返回在该 session 会话中具有指定名称的对象，如果没有指定名称的对象，则返回 null。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public Enumeration getAttributeNames()")]),t._v(" 该方法返回 String 对象的枚举，String 对象包含所有绑定到该 session 会话的对象的名称。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public long getCreationTime()")]),t._v(" 该方法返回该 session 会话被创建的时间，自格林尼治标准时间 1970 年 1 月 1 日午夜算起，以毫秒为单位。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public String getId()")]),t._v(" 该方法返回一个包含分配给该 session 会话的唯一标识符的字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public long getLastAccessedTime()")]),t._v(" 该方法返回客户端最后一次发送与该 session 会话相关的请求的时间自格林尼治标准时间 1970 年 1 月 1 日午夜算起，以毫秒为单位。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public int getMaxInactiveInterval()")]),t._v(" 该方法返回 Servlet 容器在客户端访问时保持 session 会话打开的最大时间间隔，以秒为单位。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void invalidate()")]),t._v(" 该方法指示该 session 会话无效，并解除绑定到它上面的任何对象。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public boolean isNew()")]),t._v(" 如果客户端还不知道该 session 会话，或者如果客户选择不参入该 session 会话，则该方法返回 true。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void removeAttribute(String name)")]),t._v(" 该方法将从该 session 会话移除指定名称的对象。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setAttribute(String name, Object value)")]),t._v(" 该方法使用指定的名称绑定一个对象到该 session 会话。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("public void setMaxInactiveInterval(int interval)")]),t._v(" 该方法在 Servlet 容器指示该 session 会话无效之前，指定客户端请求之间的时间，以秒为单位。")])])])]),t._v(" "),e("h4",{attrs:{id:"_7-2-2-创建或读取session会话"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-2-创建或读取session会话"}},[t._v("#")]),t._v(" 7.2.2 创建或读取Session会话")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有则返回有的，没有则创建新的")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSession")]),t._v(" session "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取Session保存一个名为code的数据值")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" correctCode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"code"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给Session设置一个名为loginUser的数据值，值为userName")]),t._v("\nsession"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"loginUser"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("userName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("h4",{attrs:{id:"_7-2-3-删除-session-会话数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-3-删除-session-会话数据"}},[t._v("#")]),t._v(" 7.2.3 删除 Session 会话数据")]),t._v(" "),e("p",[t._v("当您完成了一个用户的 session 会话数据，您有以下几种选择：")]),t._v(" "),e("ul",[e("li",[t._v("**移除一个特定的属性：**您可以调用 "),e("em",[t._v("public void removeAttribute(String name)")]),t._v(" 方法来删除与特定的键相关联的值。")]),t._v(" "),e("li",[t._v("**删除整个 session 会话：**您可以调用 "),e("em",[t._v("public void invalidate()")]),t._v(" 方法来丢弃整个 session 会话。")]),t._v(" "),e("li",[t._v("**设置 session 会话过期时间：**您可以调用 "),e("em",[t._v("public void setMaxInactiveInterval(int interval)")]),t._v(" 方法来单独设置 session 会话超时。")]),t._v(" "),e("li",[t._v("**注销用户：**如果使用的是支持 servlet 2.4 的服务器，您可以调用 "),e("strong",[t._v("logout")]),t._v(" 来注销 Web 服务器的客户端，并把属于所有用户的所有 session 会话设置为无效。")]),t._v(" "),e("li",[t._v("**web.xml 配置：**如果您使用的是 Tomcat，除了上述方法，您还可以在 web.xml 文件中配置 session 会话超时，如下所示：")])]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("session-config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("session-timeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("15"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("session-timeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("session-config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("上面实例中的超时时间是以分钟为单位，将覆盖 Tomcat 中默认的 30 分钟超时时间。")]),t._v(" "),e("p",[t._v("在一个 Servlet 中的 getMaxInactiveInterval() 方法会返回 session 会话的超时时间，以秒为单位。所以，如果在 web.xml 中配置 session 会话超时时间为 15 分钟，那么 getMaxInactiveInterval() 会返回 900。")])])}),[],!1,null,null,null);s.default=n.exports}}]);