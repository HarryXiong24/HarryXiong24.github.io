(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{948:function(t,i,s){"use strict";s.r(i);var v=s(1),_=Object(v.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"github-pages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-pages"}},[t._v("#")]),t._v(" Github Pages")]),t._v(" "),s("p",[t._v("本教程将指导您开启 Github Pages。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("需要重构")])]),t._v(" "),s("h2",{attrs:{id:"前置工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置工作"}},[t._v("#")]),t._v(" 前置工作")]),t._v(" "),s("p",[t._v("完成 git 软件的安装与配置。")]),t._v(" "),s("h2",{attrs:{id:"配置过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置过程"}},[t._v("#")]),t._v(" 配置过程")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("创建仓库")]),t._v(" "),s("p",[t._v("新建一个 repository，名字随意。将 clone or download 按钮(图中绿 色键)里面的地址复制下来。")])]),t._v(" "),s("li",[s("p",[t._v("创建并推送 index.html 文件")]),t._v(" "),s("p",[t._v("在本地创建一个空的文件夹，依次执行:")]),t._v(" "),s("ul",[s("li",[t._v("先创建 index.html(可以新建一个 xx.txt，并改名 index.html)。")]),t._v(" "),s("li",[t._v("开启命令行工具")]),t._v(" "),s("li",[t._v("git init")]),t._v(" "),s("li",[t._v('git remote add 自己用英文起个短小的名字 "刚刚复制的网址"')]),t._v(" "),s("li",[t._v("git add .")]),t._v(" "),s("li",[t._v('git commit -m"自己任意写的注释"')]),t._v(" "),s("li",[t._v("git push 自己用英文起的那个短小的名字 master")]),t._v(" "),s("li",[t._v("如果成功，刷新 Github 仓库(repository)，可以看到 index.html 已经存在于仓库里")])])]),t._v(" "),s("li",[s("p",[t._v("开启 Github Pages 功能")]),t._v(" "),s("p",[t._v("在 repository 的 settings 部分开启 Github Pages 功能。")])])])])}),[],!1,null,null,null);i.default=_.exports}}]);