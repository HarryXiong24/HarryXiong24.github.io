import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as t}from"./app-b6796c90.js";const p={},o=t(`<h2 id="键盘事件" tabindex="-1"><a class="header-anchor" href="#键盘事件" aria-hidden="true">#</a> 键盘事件</h2><h3 id="_12-1-事件触发" tabindex="-1"><a class="header-anchor" href="#_12-1-事件触发" aria-hidden="true">#</a> 12.1 事件触发</h3><ul><li><p><strong>onkeydown事件触发表明键盘按键被按下,如果一直按着某个按键不松手，则事件会一直触发</strong> **注意:**当onkeydown事件连续触发时，第一次和第二次之间会间隔稍微长一点，其他的会非常快，这种设计是为了防止误操作事故的发生,如果不想要这种效果请使用定时器</p></li><li><p><strong>onkeyup事件触发表明键盘按键被松开</strong></p></li></ul><p>**注:**键盘事件有一般都会绑定给一些可以获取到焦点的对象或者是document，有焦点的对象就是可以让光标停留的地方，比如input标签</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> input<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
input<span class="token punctuation">.</span><span class="token function-variable function">onkeydowm</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre></div><h3 id="_12-2-事件属性" tabindex="-1"><a class="header-anchor" href="#_12-2-事件属性" aria-hidden="true">#</a> 12.2 事件属性</h3><p><strong>通过事件对象event的keyCode和key属性可以获取按键的编码和输入键的字符</strong>，可以判断哪个按键被按下</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token operator">===</span><span class="token number">89</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;y被按下了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>key<span class="token operator">===</span><span class="token string">&quot;y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;y被按下了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>事件对象中还提供了几个辅助属性</strong></p><ul><li><p>altKey属性判断alt键是否被按下，如果按下则返回true，否则返回false</p></li><li><p>ctrlKey属性判断ctrl键是否被按下，如果按下则返回true，否则返回false</p></li><li><p>shiftKey属性判断shift键是否被按下，如果按下则返回true，否则返回false</p></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//判断y和ctrl是否同时被按下</span>
document<span class="token punctuation">.</span><span class="token function-variable function">onkeydown</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    event<span class="token operator">=</span>event<span class="token operator">||</span>window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token operator">===</span><span class="token number">89</span><span class="token operator">&amp;&amp;</span>event<span class="token punctuation">.</span>ctrlKey<span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;ctrl和y都被按下了&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>注意:在文本框中输入内容，属于onkeydown的默认行为，如果在onkeydown中取消了默认行为return false，则输入的内容不会出现在文本框中</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//文本框中不能输入数字</span>
input<span class="token punctuation">,</span><span class="token function-variable function">onkeydown</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    event<span class="token operator">=</span>event<span class="token operator">||</span>window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token operator">&gt;=</span><span class="token number">48</span><span class="token operator">&amp;&amp;</span>event<span class="token punctuation">.</span>keyCode<span class="token operator">&lt;=</span><span class="token number">57</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,13),e=[o];function c(u,l){return a(),s("div",null,e)}const r=n(p,[["render",c],["__file","db12.html.vue"]]);export{r as default};
