const e=JSON.parse('{"key":"v-5e224cd1","path":"/en/article/graph.html","title":"Graph","lang":"en-US","frontmatter":{"article":true,"isOriginal":true,"sticky":800,"star":800,"category":"article","tag":["Graph"],"date":"2023-12-08T00:00:00.000Z","description":"Disjoint Set Main idea The main idea of a “disjoint set” is to have all connected vertices have the same parent node or root node, whether directly or indirectly connected. To c...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/en/article/graph.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"Graph"}],["meta",{"property":"og:description","content":"Disjoint Set Main idea The main idea of a “disjoint set” is to have all connected vertices have the same parent node or root node, whether directly or indirectly connected. To c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-12-09T04:42:14.000Z"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"Graph"}],["meta",{"property":"article:published_time","content":"2023-12-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-09T04:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Graph\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-09T04:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Disjoint Set","slug":"disjoint-set","link":"#disjoint-set","children":[{"level":3,"title":"Main idea","slug":"main-idea","link":"#main-idea","children":[]},{"level":3,"title":"Implement","slug":"implement","link":"#implement","children":[]}]},{"level":2,"title":"The methods to represent Graph","slug":"the-methods-to-represent-graph","link":"#the-methods-to-represent-graph","children":[{"level":3,"title":"Unweighted Graph","slug":"unweighted-graph","link":"#unweighted-graph","children":[]},{"level":3,"title":"Weighted Graph","slug":"weighted-graph","link":"#weighted-graph","children":[]}]},{"level":2,"title":"DFS","slug":"dfs","link":"#dfs","children":[{"level":3,"title":"Traversing all Vertices","slug":"traversing-all-vertices","link":"#traversing-all-vertices","children":[]},{"level":3,"title":"Traversing all paths between two vertices","slug":"traversing-all-paths-between-two-vertices","link":"#traversing-all-paths-between-two-vertices","children":[]}]},{"level":2,"title":"BFS","slug":"bfs","link":"#bfs","children":[{"level":3,"title":"Traversing all Vertices","slug":"traversing-all-vertices-1","link":"#traversing-all-vertices-1","children":[]},{"level":3,"title":"Shortest Path Between Two Vertices","slug":"shortest-path-between-two-vertices","link":"#shortest-path-between-two-vertices","children":[]}]},{"level":2,"title":"Minimum Spanning Tree","slug":"minimum-spanning-tree","link":"#minimum-spanning-tree","children":[{"level":3,"title":"Kruskal","slug":"kruskal","link":"#kruskal","children":[]},{"level":3,"title":"Prim","slug":"prim","link":"#prim","children":[]},{"level":3,"title":"Compare","slug":"compare","link":"#compare","children":[]}]},{"level":2,"title":"Single Source Shortest Path","slug":"single-source-shortest-path","link":"#single-source-shortest-path","children":[{"level":3,"title":"Dijkstra","slug":"dijkstra","link":"#dijkstra","children":[]}]}],"git":{"createdTime":1702096324000,"updatedTime":1702096934000,"contributors":[{"name":"harryxiong24","email":"harryxiong24@gmail.com","commits":2}]},"readingTime":{"minutes":5.44,"words":1631},"filePathRelative":"en/article/graph.md","localizedDate":"December 8, 2023","excerpt":"","autoDesc":true}');export{e as data};
