import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as n,d as o,w as t,b as s,f as i}from"./app-430054e9.js";const u={},k=n("h1",{id:"data-storage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#data-storage","aria-hidden":"true"},"#"),s(" Data Storage")],-1),r={class:"table-of-contents"},d=i(`<h2 id="_1-cookie" tabindex="-1"><a class="header-anchor" href="#_1-cookie" aria-hidden="true">#</a> 1. Cookie</h2><p><strong>cookie 用于存储数据,当用户访问了某个网站(网页)的时候,可以通过 cookie 来访问客户端上存储的数据</strong></p><p><strong>注意:</strong></p><ul><li><p>不同的浏览器存放的 cookie 位置不一样，也是不能通用的</p></li><li><p>cookie 的存储是以域名形式进行区分的</p></li><li><p>cookie 的数据可以设置名字的</p></li><li><p>一个域名下存放的 cookie 的个数是有限制的，不同的浏览器存放的个数不一样</p></li><li><p>每个 cookie 存放的内容大小也是有限制的，不同的浏览器存放大小不一样</p></li></ul><h3 id="_1-1-访问-cookie" tabindex="-1"><a class="header-anchor" href="#_1-1-访问-cookie" aria-hidden="true">#</a> 1.1 访问 cookie</h3><p><strong>通过 document.cookie 属性可以获取当前网站下的所有 cookie,得到字符串形式的值,<strong>该返回值会将所有的 cookie 通过</strong>分号+空格</strong>的形式串联起来</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_1-2-存储-cookie" tabindex="-1"><a class="header-anchor" href="#_1-2-存储-cookie" aria-hidden="true">#</a> 1.2 存储 cookie</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&quot;数据名=值&quot;</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>注意:</strong></p><ul><li><p>如果设置不同的 cookie 值,则用 document.cookie 再次赋值不会将原来设置的 cookie 覆盖掉,而是再加上一条 cookie</p></li><li><p>如果设置相同的 cookie 值,则再次用 document.coolkie 设置 cookie 值时会将原来的 cookie 值覆盖掉</p></li></ul><h3 id="_1-3-设置-cookie-过期时间" tabindex="-1"><a class="header-anchor" href="#_1-3-设置-cookie-过期时间" aria-hidden="true">#</a> 1.3 设置 cookie 过期时间</h3><p>cookie 默认是临时存储的,当浏览器关闭进程的时候自动销毁 ,如果想长时间存放一个 cookie。需要在设置这个 cookie 的时候设置一个过期的时间</p><p>**注意:**过期时间必须是一个日期对象转换成的字符串</p><p><strong>document.cookie = &quot;数据名=值; expires=过期时间&quot;</strong>;</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> oDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
oDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>oDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
oDate<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为日期字符串</span>

document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&quot;age=20; expires=&quot;</span> <span class="token operator">+</span> oDate<span class="token punctuation">;</span>

<span class="token comment">//转码</span>
<span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span><span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&quot;agex=&quot;</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">&quot;;expires=&quot;</span> <span class="token operator">+</span> oDate<span class="token punctuation">;</span>
</code></pre></div><p>\`</p><h3 id="_1-4-cookie-封装" tabindex="-1"><a class="header-anchor" href="#_1-4-cookie-封装" aria-hidden="true">#</a> 1.4 cookie 封装</h3><ul><li><p>设置 cookie 封装</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    d<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;; expires=&quot;</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">setCookie</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&quot;man&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token number">5</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//5天后自动删除cookie</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取 cookie 封装</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//这里是用的arguments来设置的,所以可以获取多个cookie值</span>
  <span class="token keyword">var</span> cookie <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token string">&quot;\\\\b&quot;</span> <span class="token operator">+</span> arguments<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;=(\\\\w*)+&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    value <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>

    result<span class="token punctuation">[</span>arguments<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> value <span class="token operator">?</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//解码</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//能够查找多个</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>移除 cookie</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">removeCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//这里是用的arguments来获取的,所以可以删除多个cookie值</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    json<span class="token punctuation">[</span>arguments<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token function">setCookie</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">removeCookie</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li></ul><h2 id="_2-本地存储" tabindex="-1"><a class="header-anchor" href="#_2-本地存储" aria-hidden="true">#</a> 2. 本地存储</h2><h3 id="_2-1-sessionstorage" tabindex="-1"><a class="header-anchor" href="#_2-1-sessionstorage" aria-hidden="true">#</a> 2.1 sessionStorage</h3><p><strong>sessionStorage 属性允许用户访问一个 session Storage 对象,存储在 sessionStorage 中的数据在页面会话结束时被清除</strong></p><p><strong>注意:</strong></p><ul><li><p>页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。</p></li><li><p>在新标签或窗口打开一个页面时会在顶级浏览上下文中初始化一个新的会话,这点和 cookies 的运行方式不同</p></li></ul><p><strong>方法</strong></p><ul><li><p>setItem(&quot;对象名&quot;,&quot;对象值&quot;),增加一个数据项目</p></li><li><p>getItem(&quot;对象名&quot;),获取一个数据项目</p></li><li><p>removeItem(&quot;对象名&quot;),移除一个数据项目</p></li><li><p>clear(),不传参数,移除所有的数据项目</p></li></ul><h3 id="_2-2-localstorage" tabindex="-1"><a class="header-anchor" href="#_2-2-localstorage" aria-hidden="true">#</a> 2.2 localStorage</h3><p>localStorage 属性允许用户访问一个了 local Storage 对象,存储在 localStorage 中的数据能在跨浏览器会话保留,也就是说该属性中存入的值会在本地存储中永久保存</p><p>**注意:**localStorage 中的键值对总是以字符串的形式存储,所有如果传入的是非字符串参数会自动转换为字符串,最好手动转化</p><p><strong>方法</strong></p><ul><li><p>setItem(&quot;对象名&quot;,&quot;对象值&quot;),增加一个数据项目</p></li><li><p>getItem(&quot;对象名&quot;),获取一个数据项目</p></li><li><p>removeItem(&quot;对象名&quot;),移除一个数据项目</p></li><li><p>clear(),不传参数,移除所有的数据项目</p></li></ul>`,31);function v(m,g){const a=p("router-link");return c(),l("div",null,[k,n("nav",r,[n("ul",null,[n("li",null,[o(a,{to:"#_1-cookie"},{default:t(()=>[s("1. Cookie")]),_:1}),n("ul",null,[n("li",null,[o(a,{to:"#_1-1-访问-cookie"},{default:t(()=>[s("1.1 访问 cookie")]),_:1})]),n("li",null,[o(a,{to:"#_1-2-存储-cookie"},{default:t(()=>[s("1.2 存储 cookie")]),_:1})]),n("li",null,[o(a,{to:"#_1-3-设置-cookie-过期时间"},{default:t(()=>[s("1.3 设置 cookie 过期时间")]),_:1})]),n("li",null,[o(a,{to:"#_1-4-cookie-封装"},{default:t(()=>[s("1.4 cookie 封装")]),_:1})])])]),n("li",null,[o(a,{to:"#_2-本地存储"},{default:t(()=>[s("2. 本地存储")]),_:1}),n("ul",null,[n("li",null,[o(a,{to:"#_2-1-sessionstorage"},{default:t(()=>[s("2.1 sessionStorage")]),_:1})]),n("li",null,[o(a,{to:"#_2-2-localstorage"},{default:t(()=>[s("2.2 localStorage")]),_:1})])])])])]),d])}const _=e(u,[["render",v],["__file","data-storage.html.vue"]]);export{_ as default};
