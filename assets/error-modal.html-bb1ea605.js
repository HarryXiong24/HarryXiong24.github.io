const e=JSON.parse('{"key":"v-b9a7e75c","path":"/zh/article/error-modal.html","title":"给你的库或框架设计一个通用错误处理模型","lang":"zh-CN","frontmatter":{"article":true,"date":"2022-04-20T00:00:00.000Z","category":"Web Development","sticky":10,"star":10,"tag":["错误处理模型"],"description":"引言 不知道大家在封装一个库的时候，会不会考虑错误处理的问题？ 错误处理是库或框架开发过程中重要的设计环节，建立良好的错误处理机制可以直接增强这个库或框架本身的健壮性和可扩展性，大大减少使用者的开发负担。 提出问题 假设我封装好了一个库： 里面有一个 todoA 方法，当用户使用我这个库的这个方法的时候，出错了怎么办？ 此时有两种解决方法： 让用户自行...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/article/error-modal.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"给你的库或框架设计一个通用错误处理模型"}],["meta",{"property":"og:description","content":"引言 不知道大家在封装一个库的时候，会不会考虑错误处理的问题？ 错误处理是库或框架开发过程中重要的设计环节，建立良好的错误处理机制可以直接增强这个库或框架本身的健壮性和可扩展性，大大减少使用者的开发负担。 提出问题 假设我封装好了一个库： 里面有一个 todoA 方法，当用户使用我这个库的这个方法的时候，出错了怎么办？ 此时有两种解决方法： 让用户自行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-22T02:30:20.000Z"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"错误处理模型"}],["meta",{"property":"article:published_time","content":"2022-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-22T02:30:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"给你的库或框架设计一个通用错误处理模型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-22T02:30:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"提出问题","slug":"提出问题","link":"#提出问题","children":[]},{"level":2,"title":"如何在库内部处理错误？","slug":"如何在库内部处理错误","link":"#如何在库内部处理错误","children":[]},{"level":2,"title":"提供统一的错误处理接口","slug":"提供统一的错误处理接口","link":"#提供统一的错误处理接口","children":[]},{"level":2,"title":"基于 class 的封装","slug":"基于-class-的封装","link":"#基于-class-的封装","children":[]}],"git":{"createdTime":1687401020000,"updatedTime":1687401020000,"contributors":[{"name":"harryxiong24","email":"harryxiong24@gmail.com","commits":1}]},"readingTime":{"minutes":3.41,"words":1022},"filePathRelative":"zh/article/error-modal.md","localizedDate":"2022年4月20日","excerpt":"","autoDesc":true}');export{e as data};
