import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as t}from"./app-56bdfee4.js";const p={},o=t(`<h2 id="js特殊类实例" tabindex="-1"><a class="header-anchor" href="#js特殊类实例" aria-hidden="true">#</a> JS特殊类实例</h2><h3 id="_12-1-包装类" tabindex="-1"><a class="header-anchor" href="#_12-1-包装类" aria-hidden="true">#</a> 12.1 包装类</h3><p><strong>js中为我们提供了三个包装类，通过这三个包装类可以将基本的数据类型转换为对象</strong></p><p><strong>这三个包装类分别为String(),Number()和Boolean()</strong></p><p><strong>对于包装类的举例</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">//这样就能把基本数据类型number转换为一个对象,3依然是num的值，这样做能为num添加属性</span>

<span class="token comment">/*
注意:
1.如果为一个基本数据类型添加属性虽然不会报错但是不会添加成功
2.如果在创建number类型的时候用了包装类,那么两个相同的值比较也就不再相等,因为开辟了两片空间,地址不同
*/</span>
</code></pre></div><p><strong>注:在实际开发中我们不会使用包装类创建对象，如果使用这种基本数据类型的对象，在做一些比较时可能会带来一些不可预期的结果</strong></p><p><strong>包装类的用途</strong></p><p>**浏览器会自己调用包装类的方法，**当我们对一些基本数据类型的值调用属性和方法时，浏览器会临时使用包装类将其转换为对象，然后调用对象的属性和方法，调用完以后又转换回来</p><p><strong>对基本数据类型添加属性或方法的解释</strong></p><p>给一个基本数据类型添加属性或方法就是<strong>将该类型的值转换为对象</strong>，其实属性添加进去了，但是因为临时转换，又转换为基本数据类型，然后销毁了属性或方法</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
num<span class="token punctuation">.</span>say<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span><span class="token comment">//这时确实进行了类型转换但是又马上转换回来销毁了say属性</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span>
<span class="token comment">/*
第二次使用该属性时其实是又临时转换了类型,但是由于每次转换都是新建一个对象,所以第二次转换的对象和第一次的
对象不同,这个对象没有添加say属性,所以返回的值为undefined
*/</span>
</code></pre></div><h3 id="_12-2-date对象" tabindex="-1"><a class="header-anchor" href="#_12-2-date对象" aria-hidden="true">#</a> 12.2 Date对象</h3><p><strong>在js中使用Date对象来表示一个时间对象</strong>,Date可以作为构造函数,也可以作为一个普通对象使用</p><h4 id="_12-2-1-创建一个date对象" tabindex="-1"><a class="header-anchor" href="#_12-2-1-创建一个date对象" aria-hidden="true">#</a> 12.2.1 创建一个Date对象</h4><ul><li><p>如果直接使用构造函数创建一个Date对象，则会封装为当前代码执行的时间</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> d<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">,</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token comment">//打印出当前执行到该时刻时的时间(以地区时间为准)</span>
</code></pre></div></li><li><p>创建一个指定的时间对象</p><p>需要在构造函数中传递一个表示时间的字符串作为参数</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//格式：月/日/年 时间(比如12:31:30表示12点31分30秒)</span>
<span class="token keyword">var</span> dt<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//所有设置年月日前面都可以加0或者不加如02/15/2019</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Fri Feb 15 2019 12:31:30</span>
</code></pre></div></li></ul><p><strong>注意:</strong></p><ul><li><p>new Date()获取的时间对象通过toString()方法可以完全转换为一个字符串</p></li><li><p>通过Date.parse()函数可以将传入的字符串参数转换为一个日期对象</p></li></ul><h4 id="_12-2-2-date对象的方法" tabindex="-1"><a class="header-anchor" href="#_12-2-2-date对象的方法" aria-hidden="true">#</a> 12.2.2 Date对象的方法</h4><h5 id="_12-2-2-1-getdate方法" tabindex="-1"><a class="header-anchor" href="#_12-2-2-1-getdate方法" aria-hidden="true">#</a> 12.2.2.1 getDate方法</h5><p><strong>getDate()方法获取当前日期对象是该月中的第几日</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> day<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//15</span>
</code></pre></div><h5 id="_10-2-2-2-getday-getmonth与getfullyear方法" tabindex="-1"><a class="header-anchor" href="#_10-2-2-2-getday-getmonth与getfullyear方法" aria-hidden="true">#</a> 10.2.2.2 getDay,getMonth与getFullYear方法</h5><ul><li><p>getDay()方法获取当前日期是周几</p><p>,该方法的返回值为0-6</p><p>(0为周日)</p><p>,1-6依次为周一到周六</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> week<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>week<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span>
</code></pre></div></li><li><p>getMonth()方法获取当前日期月份,</p><p>该方法的返回值为0-11</p><p>(0为一月)</p><p>,依次向后排序</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> month<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>
</code></pre></div></li><li><p>getFullYear()方法获取当前日期年份</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> year<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2019</span>
</code></pre></div></li></ul><h5 id="_12-2-2-3-gethours-getminutes-getseconds与getmilliseconds方法" tabindex="-1"><a class="header-anchor" href="#_12-2-2-3-gethours-getminutes-getseconds与getmilliseconds方法" aria-hidden="true">#</a> 12.2.2.3 getHours,getMinutes,getSeconds与getMilliseconds方法</h5><ul><li><p>getHours()方法获取当前日期的小时数</p></li><li><p>getMinutes()方法获取当前日期的分钟数</p></li><li><p>getSeconds()方法获取当前日期的秒数</p></li><li><p>getMilliseconds()获取当前日期的毫秒数</p></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> hour<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> minute<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> second<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> millscecond<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hour<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//12</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>minute<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//31</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//30</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>millsecond<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0,因为没有设置,在这里默认是0</span>
</code></pre></div><h5 id="_12-2-2-4-gettime方法" tabindex="-1"><a class="header-anchor" href="#_12-2-2-4-gettime方法" aria-hidden="true">#</a> 12.2.2.4 getTime方法</h5><p>**getTime()方法获取当前日期对象的时间差,**就是自格林威治标准时间的1970年1月1日0时0分0秒到现在的是</p><p>所经历的毫秒数(因为计算机底层报错时间就是用的毫秒)</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2/15/2019 12:31:30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> time<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1550205090123</span>
</code></pre></div><p>**注:**如果想要具体到秒,分或者时,只需要将返回的值除以各自相对于毫秒的倍数即可</p><p>**注意:**如果我们(在中国)用new Date()创建对象时传入的日期是1970年1月1日0时0分0秒,用getTime()方法也会返回</p><p>一个负数(-28800000),因为我们输入的时间默认是北京时间,相对于标准时间有8个小时的提前时差</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;1/1/1970 0:0:0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> time<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//-28800000</span>
</code></pre></div><h5 id="_12-2-2-5-gettimezoneoffset方法" tabindex="-1"><a class="header-anchor" href="#_12-2-2-5-gettimezoneoffset方法" aria-hidden="true">#</a> 12.2.2.5 getTimezoneOffset方法</h5><p>**getTimezoneOffset()方法获取当前地区相对于世界时的时间差,**该方法会返回一个数字,单位为分钟</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> time<span class="token operator">=</span>date<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//世界时-本地时间=-8*60 分钟</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//-480,因为本地时间比世界时快</span>
</code></pre></div><h4 id="_12-2-3-date-now函数" tabindex="-1"><a class="header-anchor" href="#_12-2-3-date-now函数" aria-hidden="true">#</a> 12.2.3 Date.now函数</h4><p>**Date.now()函数能够获取当前时刻距离格林威治标准时间的1970年1月1日0时0分0秒的时间差,**是一个静态方法,</p><p>通常用作测试代码的执行性能(在代码前后分别设置事件作差值)</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> time<span class="token operator">=</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_12-3-math对象" tabindex="-1"><a class="header-anchor" href="#_12-3-math对象" aria-hidden="true">#</a> 12.3 Math对象</h3><p>Math不是一个构造函数,只是一个普通对象,Math对象中包含了许多数学方法</p><p><strong>所有方法通过Math.方法名()来使用;</strong></p><p><strong>在这里只列举了一些常用数学方法</strong></p><ul><li><p>abs()取绝对值</p></li><li><p>sqrt()计算开方,得到算术平方根</p></li><li><p>ceil()可以对一个数进行向上整数，小数位是要有值就会自动进一位</p></li><li><p>floor()可以对一个数进行向下取整，小数部分会被舍掉</p></li><li><p>round()可以对一个数进行四舍五入</p></li><li><p>max(x,y,z)可以获取多个数中的最大值</p></li><li><p>min(x,y,z)可以获取多个数中的最小值</p></li><li><p>pow(x,y)返回x的y次幂</p></li><li><p>trunc()方法用于去除一个数的小数部分,返回整数部分 <strong>注意:</strong></p></li><li><ul><li>该方法对于大于0的数时向下取整,对于小于0的数是向上取整</li></ul></li><li><ul><li>对于非数值会先进行强制类型转换,对于空值或无法取整的值会返回NaN</li></ul></li><li><p>sign()方法用来判断一个数是正数,负数,还是0,如果是非数值会先进行强制类型转换 <strong>五种返回值</strong></p></li><li><ul><li>参数为正数,返回+1</li></ul></li><li><ul><li>参数为负数,返回-1</li></ul></li><li><ul><li>参数为0,返回0</li></ul></li><li><ul><li>参数为-0,返回-0</li></ul></li><li><ul><li>参数为其他值,返回NaN</li></ul></li><li><p>cbrt()方法用于计算一个数的<strong>立方根</strong>,非数值会进行强制类型转换</p></li><li><p>hypot()返回</p><p>所有参数的平方和的平方根</p><p>,用法相当于用勾股定理已知两直角边求斜边</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//7.0710678118654755</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0,不传参数返回值为0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//NaN</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//NaN</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span>
</code></pre></div></li><li><p>random()可以生成一个0-1之间[0,1)的随机数</p></li><li><ul><li>**生成一个0-X之间的随机数Math.random()<em>X</em></li></ul></li><li><ul><li>**生成一个X-Y之间的随机数Math.random()<em>(Y-X)+X</em></li></ul></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//生成一个0-10的随机数</span>
<span class="token keyword">var</span> num1<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//如果要取整可以四舍五入 </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><p>保留几位小数用toFixed()方法,这个方法不是Math对象调用,而是原来的数值对象调用,参数为具体数值,并将会进行四舍五入</p><p>注意:</p><p>该方法内部是用的银行的四舍五入算法,和普通的四舍五入不同(具体的银行四舍五入算法请私下了解)</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token number">0.95</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num2<span class="token operator">=</span><span class="token number">1.35</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0.9,代表保留一位小数</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1.4</span>
</code></pre></div></li></ul>`,49),e=[o];function c(l,u){return a(),s("div",null,e)}const r=n(p,[["render",c],["__file","js12.html.vue"]]);export{r as default};
