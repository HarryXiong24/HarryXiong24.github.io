const e=JSON.parse('{"key":"v-c1e3e9d4","path":"/zh/front-end/js-es/es6/regex.html","title":"正则的扩展","lang":"zh-CN","frontmatter":{"date":"2020-08-23T00:00:00.000Z","category":"Web 前端","tag":"ECMA Script6","description":"RegExp 构造函数 在 ES5 中，RegExp构造函数的参数有两种情况。 第一种情况是，参数是字符串，这时第二个参数表示正则表达式的修饰符(flag)。 第二种情况是，参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。 但是，ES5 不允许此时使用第二个参数添加修饰符，否则会报错。 ES6 改变了这种行为。如果RegExp构造函数第一个参...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/front-end/js-es/es6/regex.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"正则的扩展"}],["meta",{"property":"og:description","content":"RegExp 构造函数 在 ES5 中，RegExp构造函数的参数有两种情况。 第一种情况是，参数是字符串，这时第二个参数表示正则表达式的修饰符(flag)。 第二种情况是，参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。 但是，ES5 不允许此时使用第二个参数添加修饰符，否则会报错。 ES6 改变了这种行为。如果RegExp构造函数第一个参..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-02T08:03:04.000Z"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"ECMA Script6"}],["meta",{"property":"article:published_time","content":"2020-08-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-02T08:03:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则的扩展\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-02T08:03:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"RegExp 构造函数","slug":"regexp-构造函数","link":"#regexp-构造函数","children":[]},{"level":2,"title":"字符串的正则方法","slug":"字符串的正则方法","link":"#字符串的正则方法","children":[]},{"level":2,"title":"u 修饰符","slug":"u-修饰符","link":"#u-修饰符","children":[]},{"level":2,"title":"RegExp.prototype.unicode 属性","slug":"regexp-prototype-unicode-属性","link":"#regexp-prototype-unicode-属性","children":[]},{"level":2,"title":"y 修饰符","slug":"y-修饰符","link":"#y-修饰符","children":[]},{"level":2,"title":"RegExp.prototype.sticky 属性","slug":"regexp-prototype-sticky-属性","link":"#regexp-prototype-sticky-属性","children":[]},{"level":2,"title":"RegExp.prototype.flags 属性","slug":"regexp-prototype-flags-属性","link":"#regexp-prototype-flags-属性","children":[]},{"level":2,"title":"s 修饰符: dotAll 模式","slug":"s-修饰符-dotall-模式","link":"#s-修饰符-dotall-模式","children":[]},{"level":2,"title":"后行断言","slug":"后行断言","link":"#后行断言","children":[]},{"level":2,"title":"Unicode 属性类","slug":"unicode-属性类","link":"#unicode-属性类","children":[]},{"level":2,"title":"具名组匹配","slug":"具名组匹配","link":"#具名组匹配","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"解构赋值和替换","slug":"解构赋值和替换","link":"#解构赋值和替换","children":[]},{"level":3,"title":"引用","slug":"引用","link":"#引用","children":[]}]},{"level":2,"title":"String.prototype.matchAll","slug":"string-prototype-matchall","link":"#string-prototype-matchall","children":[]}],"git":{"createdTime":1686825018000,"updatedTime":1688284984000,"contributors":[{"name":"harryxiong24","email":"harryxiong24@gmail.com","commits":2}]},"readingTime":{"minutes":16.43,"words":4928},"filePathRelative":"zh/front-end/js-es/es6/regex.md","localizedDate":"2020年8月23日","excerpt":"","autoDesc":true}');export{e as data};
