import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as r,c as t,a as i,b as e,d as s,e as l}from"./app-a63d3fdb.js";const o="/assets/1-6f147ec8.png",d={},c=l('<h2 id="vue-简介" tabindex="-1"><a class="header-anchor" href="#vue-简介" aria-hidden="true">#</a> Vue 简介</h2><h3 id="_1-1-vue-的特性" tabindex="-1"><a class="header-anchor" href="#_1-1-vue-的特性" aria-hidden="true">#</a> 1.1 Vue 的特性</h3><p><strong>Vue 是一套用于构建用户界面的渐进式框架,与其它大型框架不同的是,Vue 被设计为可以自底向上逐层应用,Vue 拥有以下特性:</strong></p><ul><li>组件化思想</li><li>模板的使用和数据渲染非常灵活，层次结构鲜明</li><li>简单的语法并能够简单快速构建一个项目</li><li>轻量级，体积小渲染速度更快</li><li>Vue 采用的脚手架工具为 vue-cli</li><li>初期是尤雨溪维护，现在有加入的团队组织个人提供技术一同维护迭代更新</li><li>Vue 中指令和组件分得更清晰。指令只封装 DOM 操作,而组件代表一个自给自足的独立单元,都拥有有自己的视图样式和数据逻辑</li></ul><h3 id="_1-2-vue-知识框架" tabindex="-1"><a class="header-anchor" href="#_1-2-vue-知识框架" aria-hidden="true">#</a> 1.2 Vue 知识框架</h3><p><img src="'+o+'" alt="1" loading="lazy"></p><h3 id="_1-3-开发准备" tabindex="-1"><a class="header-anchor" href="#_1-3-开发准备" aria-hidden="true">#</a> 1.3 开发准备</h3><h4 id="_1-3-1-下载-node-js" tabindex="-1"><a class="header-anchor" href="#_1-3-1-下载-node-js" aria-hidden="true">#</a> 1.3.1 下载 Node.js</h4>',8),h={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},u=l('<h4 id="_1-3-2-配置淘宝镜像" tabindex="-1"><a class="header-anchor" href="#_1-3-2-配置淘宝镜像" aria-hidden="true">#</a> 1.3.2 配置淘宝镜像</h4><p>因为 npm 是国外的,在国内用会特别慢,所以需要先用淘宝的 cnpm 代替 npm</p><p>在命令行窗口输入 npm install -g cnpm --registry=https://registry.npm.taobao.org 配置淘宝镜像</p><h4 id="_1-3-3-vue-cli-脚手架" tabindex="-1"><a class="header-anchor" href="#_1-3-3-vue-cli-脚手架" aria-hidden="true">#</a> 1.3.3 vue-cli 脚手架</h4><p>vue-cli 是一个基于 vue 的构建工具,用于搭建 vue 项目的环境,有着兼容,方便,快速的优点,能够完全遵循前后端分离的原则,用 vue 开发单网页项目(SPA)的能力尤其的好</p><p>**注:**可以不用脚手架(vue-cli)就可以基于 webpack 打包工具 ,webpack 最终会把整个项目打包成一个 js 文件但需要自己进行配置各个版本兼容问题,正因为这样,前端有一个专门的配置工程师</p><h4 id="_1-3-4-使用-vue-cli" tabindex="-1"><a class="header-anchor" href="#_1-3-4-使用-vue-cli" aria-hidden="true">#</a> 1.3.4 使用 vue-cli</h4><p>在命令行窗口输入 cnpm i -g vue-cli <strong>全局安装 vue-cli 脚手架</strong></p><p>Vue-cli 要全局安装</p><p>**注:**安装完成后可以使用 vue -V 查看是否安装成功</p><p><strong>安装项目文件</strong></p><p>先到项目文件夹,打开命令行窗口输入 vue init webpack 项目文件夹名(不输入则就是在该文件夹里创建)</p><p><strong>运行项目文件</strong></p><p>在项目文件中使用 npm run dev 运行项目文件</p><p><strong>打包项目</strong></p><p>在项目文件夹中运行 npm run build 将项目打包 ,打包后的文件将会保存在该文件的 list 文件夹中</p><p>npm run build --report 生成打包视图，可视化显示所有包在项目中占的大小</p><p>生产环境打包发布</p><p>​ npm run build</p><p>​ npm install -g serve</p><p>​ serve dist</p><p>​</p><h4 id="_1-3-5-eslint" tabindex="-1"><a class="header-anchor" href="#_1-3-5-eslint" aria-hidden="true">#</a> 1.3.5 ESLint</h4><p>说明：</p><ol><li><p>ESLint 是一个代码规范检查工具</p></li><li><p>它定义了很多特定的规则, 一旦你的代码违背了某一规则,eslint 会作出非常有用的提示</p></li><li><p>官网:http://eslint.org/</p></li><li><p>基本已替代以前的 JSLint</p></li></ol><p>ESLint 提供以下支持：</p><ol><li><p>ES</p></li><li><p>JSX</p></li><li><p>style 检查</p></li><li><p>自定义错误和提示</p></li></ol><p>ESLint 提供以下几种校验：</p><ol><li><p>语法错误校验</p></li><li><p>不重要或丢失的标点符号，如分号</p></li><li><p>没法运行到的代码块（使用过 WebStorm 的童鞋应该了解）</p></li><li><p>未被使用的参数提醒</p></li><li><p>确保样式的统一规则，如 sass 或者 less</p></li><li><p>检查变量的命名</p></li></ol><p>规则的错误等级有三种：</p><ol><li><p>0：关闭规则。</p></li><li><p>1：打开规则，并且作为一个警告（信息打印黄色字体）</p></li><li><p>2：打开规则，并且作为一个错误（信息打印红色字体）</p></li></ol><p>相关配置文件</p><ol><li><p>eslintrc.js: 全局规则配置文件 &#39;rules&#39;:{ &#39;no-new&#39;:1 }</p></li><li><p>在 js/vue 文件中修改局部规则 /<em>eslint-disableno-new</em>/ newVue({ el:&#39;body&#39;, components:{App} })</p></li><li><p>eslintignore: 指令检查忽略的文件 _.js _.vue</p></li></ol>',33);function _(v,m){const p=a("ExternalLinkIcon");return r(),t("div",null,[c,i("p",null,[e("去 Node.js 的官网下载最新版的 node,需要用到其包管理工具 npm ("),i("a",h,[e("Node.js 官网"),s(p)]),e(")")]),u])}const f=n(d,[["render",_],["__file","vue1.html.vue"]]);export{f as default};
