import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as s,c as h,a as e,b as o,d as n,e as a}from"./app-f601f3f8.js";const d="/assets/mainPage-d79e6ef9.png",p="/assets/personalPage-a945a912.png",c="/assets/personalRepo-d3627a19.png",l="/assets/repo-4249b293.png",u={},b=a('<h1 id="github-教程" tabindex="-1"><a class="header-anchor" href="#github-教程" aria-hidden="true">#</a> Github 教程</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><h3 id="github-是世界上最大的同性交友网站" tabindex="-1"><a class="header-anchor" href="#github-是世界上最大的同性交友网站" aria-hidden="true">#</a> <s>Github 是世界上最大的同性交友网站😋</s></h3><h3 id="哦不-错了。github-是世界上最大的代码托管网站" tabindex="-1"><a class="header-anchor" href="#哦不-错了。github-是世界上最大的代码托管网站" aria-hidden="true">#</a> 哦不，错了。Github 是世界上最大的代码托管网站</h3><p>当然在上面交友也是极好的(这是重点，圈起来要考的😎)。</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><h3 id="repository" tabindex="-1"><a class="header-anchor" href="#repository" aria-hidden="true">#</a> repository</h3><p>仓库，简称 <strong>Repo</strong>。一个仓库即是一个项目。仓库是 Github 上的主要内容。每当您新建一个项目并想要在 Github。</p><h3 id="star" tabindex="-1"><a class="header-anchor" href="#star" aria-hidden="true">#</a> Star</h3><p>收藏，在每一个仓库主页的上方可以看到 star 按钮。其上的数值为收藏该项目的人数。点击星星即可将当前 repo 收藏到您的账号上。您可以收藏一些您比较喜欢，或者项目对您来说有很大价值的项目。同时，点击数字可以看到哪些人收藏了这个项目。</p><h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> fork</h3><p>复制仓库，在每一个仓库主页的上方可以看到 Fork 按钮。点击该按钮的作用是将当前项目复制一份到自己的仓库中，这样，您就可以在此仓库仓库上查看当前、历史的版本，切换分支、或者是随心所欲的进行修改。原项目的新的推送、对历史版本的修改、甚至原作者删除了他的 repo，都不会对您 fork 的项目产生任何影响。</p><h3 id="issue" tabindex="-1"><a class="header-anchor" href="#issue" aria-hidden="true">#</a> issue</h3><p>问题。这是一个类似讨论区的地方。如果您在使用该项目的过程中遇到了问题，可以在相应项目的 Issue 板块按照项目的要求提出 Issue。在 Issue 中可以汇报一个 bug，或者是提出一个 Feature Request (功能请求)。项目的拥有者会针对您汇报的情况对您做出回复。同时，项目拥有者还可以为此 issue 增加 label (标签)，以帮助项目成员或是项目的其他使用者更好的理解您提出 issue。也可以将您的 issue assign (分派) 给特定的项目成员解决。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了 Github 的友好交流环境，请在汇报 bug 时永远带上 bug 的一个简易的复现流程，可以直接建立一个简单的 bug repo 并把链接放置在您提出的 issue 中。</p></div><h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> pull request</h3><p>发起推送请求，简称 <strong>PR</strong>。如果是您自己的项目，您可以从一个分支向另一个分支发起推送请求。如果您想对别人的(您无权进行推送)项目进行代码的推送请求的化，需要先 fork 这个仓库。在自己 fork 的项目上进行修改，然后提交到自己的项目上，之后，建立一个从自己 repo 到对方 repo 的 PR。如果对方觉得您的新改动很不错，在经过测试或者 review 后就会接受它，这样原有项目就可拥有这些新的代码了.</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h3><p>关注，在每一个仓库主页的上方可以看到 Watch 按钮。如果您关注了某个项目,那么这个项目有了变化的时候,您就会得到通知.在您点击关注后，您还可以点击下拉列表进一步设置关注级别。您可以选择接受 Release (新发布) 通知，也可以选择 Watching 来监听所有的通知。当您选择 Ignore 的话，即使有人在这个 repo 中 metion (提到) 了您，您也不会得到通知。</p><h3 id="review" tabindex="-1"><a class="header-anchor" href="#review" aria-hidden="true">#</a> review</h3><p>代码确认。当项目收到 PR 时，项目的拥有成员可以对这份 PR 的代码改动进行代码确认，在 Review 的过程中，可以对代码的特定行或特定几行通过 comment(评论) 的方式来提出自己对代码改动的意见。</p><h2 id="主页" tabindex="-1"><a class="header-anchor" href="#主页" aria-hidden="true">#</a> 主页</h2><p><img src="'+d+'" alt="个人主页" loading="lazy"></p>',23),g={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},f=a('<p>主页，在您登陆后，屏幕的左侧会展示您和您加入团队的项目，以及您的团队详情。中部会显示您关注的项目、人的动态，右侧会根据算法展示一些您可能会感兴趣的 repo。</p><h2 id="个人主页" tabindex="-1"><a class="header-anchor" href="#个人主页" aria-hidden="true">#</a> 个人主页</h2><p><img src="'+p+'" alt="个人主页" loading="lazy"></p><p><strong><code>https://github.com/&lt;您的用户名&gt;</code></strong></p><p>个人主页会有几个主要面板:</p><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h3><p>个人概览，您可以在上方 pin(固定) 最多六个您想要展示给他人的仓库。</p><p>下方就是您过去一年里向 github 的提交数量分布图，以及您在 github 上的活动比例。</p><p>最下方是近几年您在 Github 上的活动记录。</p><h3 id="repositories" tabindex="-1"><a class="header-anchor" href="#repositories" aria-hidden="true">#</a> Repositories</h3><p><img src="'+c+'" alt="个人仓库" loading="lazy"></p><p>仓库列表，该面板会按照最后更新时间的倒序，展示该用户拥有的所有 reo，同时也会在面板上展示项目的 Descript(描述)、Star 数、Fork 数、语言、协议、标签，以及过去一年内项目的 commit 分布数量。这些都能够帮助浏览者在不进入具体仓库页面的情况下大致了解每一个仓库的内容、欢迎程度与维护情况。</p><h3 id="projects" tabindex="-1"><a class="header-anchor" href="#projects" aria-hidden="true">#</a> Projects</h3><p>个人拥有的项目，在管理自己与团队跨 repo 的活动日程时很有用。可以设置涉及到的 repo，提出任务、代办、时间表等。</p><h3 id="packages" tabindex="-1"><a class="header-anchor" href="#packages" aria-hidden="true">#</a> Packages</h3><p>个人在 Github 上拥有的包。目前较少人在 Github 上发布相关的包。</p><h3 id="stars" tabindex="-1"><a class="header-anchor" href="#stars" aria-hidden="true">#</a> Stars</h3><p>和仓库列表完全相同，只不过展示该用户收藏的 repo。</p><h3 id="followers-following" tabindex="-1"><a class="header-anchor" href="#followers-following" aria-hidden="true">#</a> Followers / Following</h3><p>关注您的人 / 关注的人。在个人主页的左侧就有 follow 按钮，follow 一个人意味着这个人在 Github 的的活动会出现在 Github 主页的 Activity List 上。</p><h2 id="仓库主页" tabindex="-1"><a class="header-anchor" href="#仓库主页" aria-hidden="true">#</a> 仓库主页</h2><p><img src="'+l+'" alt="仓库主页" loading="lazy"></p><p>仓库主页主要显示项目的信息。从左到右的面板依次是: Code(代码)，Issues (问题)、Pull Requests (提交请求)、Actions (自动流程)、 Projects (项目)、 Wiki (项目介绍)、 Security (项目安全)、 Insights (项目数据统计) 与 Settings (项目设置)。</p><p>在下方会展示代码文件以及项目说明 README.md 文件。</p>',24);function x(_,m){const r=t("ExternalLinkIcon");return s(),h("div",null,[b,e("p",null,[e("a",g,[o("https://github.com"),n(r)])]),f])}const v=i(u,[["render",x],["__file","index.html.vue"]]);export{v as default};
