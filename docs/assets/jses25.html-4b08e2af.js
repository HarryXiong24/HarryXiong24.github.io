const e=JSON.parse('{"key":"v-46b6cb24","path":"/zh/front-end/advanced-js/jses25.html","title":"25.正则表达式","lang":"zh-CN","frontmatter":{"icon":"js","category":"Web前端","tag":"JS进阶教程","time":"2021-8-1","footer":"一切都是最好的安排","title":"25.正则表达式","description":"概述 正则表达式（regular expression）是一种表达文本模式（即字符串结构）的方法，有点像字符串的模板，常常用来按照“给定模式”匹配文本。比如，正则表达式给出一个 Email 地址的模式，然后用它来确定一个字符串是否为 Email 地址。JavaScript 的正则表达式体系是参照 Perl 5 建立的。 新建正则表达式有两种方法。一种是...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/front-end/advanced-js/jses25.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"25.正则表达式"}],["meta",{"property":"og:description","content":"概述 正则表达式（regular expression）是一种表达文本模式（即字符串结构）的方法，有点像字符串的模板，常常用来按照“给定模式”匹配文本。比如，正则表达式给出一个 Email 地址的模式，然后用它来确定一个字符串是否为 Email 地址。JavaScript 的正则表达式体系是参照 Perl 5 建立的。 新建正则表达式有两种方法。一种是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"JS进阶教程"}],["meta",{"property":"article:published_time","content":"2021-07-31T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"25.正则表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-31T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"RegExp 构造函数","slug":"regexp-构造函数","link":"#regexp-构造函数","children":[]},{"level":2,"title":"实例属性","slug":"实例属性","link":"#实例属性","children":[]},{"level":2,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[{"level":3,"title":"RegExp.prototype.test()","slug":"regexp-prototype-test","link":"#regexp-prototype-test","children":[]},{"level":3,"title":"RegExp.prototype.exec()","slug":"regexp-prototype-exec","link":"#regexp-prototype-exec","children":[]}]},{"level":2,"title":"字符串的实例方法","slug":"字符串的实例方法","link":"#字符串的实例方法","children":[{"level":3,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":3,"title":"String.prototype.match()","slug":"string-prototype-match","link":"#string-prototype-match","children":[]},{"level":3,"title":"String.prototype.search()","slug":"string-prototype-search","link":"#string-prototype-search","children":[]},{"level":3,"title":"String.prototype.replace()","slug":"string-prototype-replace","link":"#string-prototype-replace","children":[]},{"level":3,"title":"String.prototype.split()","slug":"string-prototype-split","link":"#string-prototype-split","children":[]}]},{"level":2,"title":"匹配规则","slug":"匹配规则","link":"#匹配规则","children":[{"level":3,"title":"字面量字符和元字符","slug":"字面量字符和元字符","link":"#字面量字符和元字符","children":[]},{"level":3,"title":"转义符","slug":"转义符","link":"#转义符","children":[]},{"level":3,"title":"特殊字符","slug":"特殊字符","link":"#特殊字符","children":[]},{"level":3,"title":"字符类","slug":"字符类","link":"#字符类","children":[]},{"level":3,"title":"预定义模式","slug":"预定义模式","link":"#预定义模式","children":[]},{"level":3,"title":"重复类","slug":"重复类","link":"#重复类","children":[]},{"level":3,"title":"量词符","slug":"量词符","link":"#量词符","children":[]},{"level":3,"title":"贪婪模式","slug":"贪婪模式","link":"#贪婪模式","children":[]},{"level":3,"title":"修饰符","slug":"修饰符","link":"#修饰符","children":[]},{"level":3,"title":"组匹配","slug":"组匹配","link":"#组匹配","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"正则符号","slug":"正则符号","link":"#正则符号","children":[]},{"level":3,"title":"正则断言","slug":"正则断言","link":"#正则断言","children":[]}]},{"level":2,"title":"u 修饰符","slug":"u-修饰符","link":"#u-修饰符","children":[]},{"level":2,"title":"RegExp.prototype.unicode 属性","slug":"regexp-prototype-unicode-属性","link":"#regexp-prototype-unicode-属性","children":[]},{"level":2,"title":"y 修饰符","slug":"y-修饰符","link":"#y-修饰符","children":[]},{"level":2,"title":"RegExp.prototype.sticky 属性","slug":"regexp-prototype-sticky-属性","link":"#regexp-prototype-sticky-属性","children":[]},{"level":2,"title":"RegExp.prototype.flags 属性","slug":"regexp-prototype-flags-属性","link":"#regexp-prototype-flags-属性","children":[]},{"level":2,"title":"s 修饰符：dotAll 模式","slug":"s-修饰符-dotall-模式","link":"#s-修饰符-dotall-模式","children":[]},{"level":2,"title":"后行断言","slug":"后行断言","link":"#后行断言","children":[]},{"level":2,"title":"Unicode 属性类","slug":"unicode-属性类","link":"#unicode-属性类","children":[]},{"level":2,"title":"具名组匹配","slug":"具名组匹配","link":"#具名组匹配","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"解构赋值和替换","slug":"解构赋值和替换","link":"#解构赋值和替换","children":[]},{"level":3,"title":"引用","slug":"引用","link":"#引用","children":[]}]},{"level":2,"title":"正则匹配索引","slug":"正则匹配索引","link":"#正则匹配索引","children":[]},{"level":2,"title":"String.prototype.matchAll()","slug":"string-prototype-matchall","link":"#string-prototype-matchall","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":52.44,"words":15731},"filePathRelative":"zh/front-end/advanced-js/jses25.md","excerpt":"","autoDesc":true}');export{e as data};
