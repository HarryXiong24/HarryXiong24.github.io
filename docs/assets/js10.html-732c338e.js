const e=JSON.parse('{"key":"v-0a0414b0","path":"/zh/front-end/js-es/js/js10.html","title":"10.函数对象","lang":"zh-CN","frontmatter":{"icon":"js","category":"Web前端","tags":["JavaScript","Promise对象","JS异步","async与await"],"time":"2020-6-10","footer":"生命的广阔不经历磨难怎能达到","title":"10.函数对象","description":"函数对象 函数也是也是对象，函数中可以封装一些功能(代码)，在需要的时候执行,并且函数对象具有所有普通对象所具备的 功能 10.1 创建函数对象 构造函数方法创建函数对象，将要封装的代码以字符串的形式传递给构造函数(不推荐使用这种方法); 函数声明方法创建函数对象; 3.函数表达式创建函数对象; 注意: 加括号是调用函数，相当于函数的返回值，不加括号是...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/front-end/js-es/js/js10.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"10.函数对象"}],["meta",{"property":"og:description","content":"函数对象 函数也是也是对象，函数中可以封装一些功能(代码)，在需要的时候执行,并且函数对象具有所有普通对象所具备的 功能 10.1 创建函数对象 构造函数方法创建函数对象，将要封装的代码以字符串的形式传递给构造函数(不推荐使用这种方法); 函数声明方法创建函数对象; 3.函数表达式创建函数对象; 注意: 加括号是调用函数，相当于函数的返回值，不加括号是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"Promise对象"}],["meta",{"property":"article:tag","content":"JS异步"}],["meta",{"property":"article:tag","content":"async与await"}],["meta",{"property":"article:published_time","content":"2020-06-09T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10.函数对象\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-09T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"函数对象","slug":"函数对象","link":"#函数对象","children":[{"level":3,"title":"10.1 创建函数对象","slug":"_10-1-创建函数对象","link":"#_10-1-创建函数对象","children":[]},{"level":3,"title":"10.2 函数的返回值","slug":"_10-2-函数的返回值","link":"#_10-2-函数的返回值","children":[]},{"level":3,"title":"10.3 函数的参数","slug":"_10-3-函数的参数","link":"#_10-3-函数的参数","children":[]},{"level":3,"title":"10.4 立即执行函数","slug":"_10-4-立即执行函数","link":"#_10-4-立即执行函数","children":[]},{"level":3,"title":"10.5 方法","slug":"_10-5-方法","link":"#_10-5-方法","children":[]},{"level":3,"title":"10.6 作用域","slug":"_10-6-作用域","link":"#_10-6-作用域","children":[]},{"level":3,"title":"10.7 箭头函数","slug":"_10-7-箭头函数","link":"#_10-7-箭头函数","children":[]},{"level":3,"title":"10.8 工厂方法创建对象","slug":"_10-8-工厂方法创建对象","link":"#_10-8-工厂方法创建对象","children":[]},{"level":3,"title":"10.9 构造函数","slug":"_10-9-构造函数","link":"#_10-9-构造函数","children":[]},{"level":3,"title":"10.10 函数原型对象prototype","slug":"_10-10-函数原型对象prototype","link":"#_10-10-函数原型对象prototype","children":[]},{"level":3,"title":"10.11 继承","slug":"_10-11-继承","link":"#_10-11-继承","children":[]},{"level":3,"title":"10.12 call,apply与bind方法","slug":"_10-12-call-apply与bind方法","link":"#_10-12-call-apply与bind方法","children":[]},{"level":3,"title":"10.13 闭包","slug":"_10-13-闭包","link":"#_10-13-闭包","children":[]},{"level":3,"title":"10.14 垃圾回收(GC)","slug":"_10-14-垃圾回收-gc","link":"#_10-14-垃圾回收-gc","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":32.13,"words":9640},"filePathRelative":"zh/front-end/js-es/js/js10.md","excerpt":"","autoDesc":true}');export{e as data};
