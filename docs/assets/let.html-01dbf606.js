const e=JSON.parse('{"key":"v-9b30d27c","path":"/zh/front-end/js-es/es6/let.html","title":"let 和 const 命令","lang":"zh-CN","frontmatter":{"icon":"notice","time":"2020-6-8","category":"Web前端","tag":"ECMA Script6","footer":"天空海阔, 要做最坚强的泡沫","description":"let 命令 基本用法 ES6 新增了let命令，用来声明变量。它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效。 上面代码在代码块之中，分别用let和`var声明了两个变量。然后在代码块之外调用这两个变量，结果let声明的变量报错，var声明的变量返回了正确的值。这表明，let声明的变量只在它所在的代码块有效。 for循环的计...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/front-end/js-es/es6/let.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"let 和 const 命令"}],["meta",{"property":"og:description","content":"let 命令 基本用法 ES6 新增了let命令，用来声明变量。它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效。 上面代码在代码块之中，分别用let和`var声明了两个变量。然后在代码块之外调用这两个变量，结果let声明的变量报错，var声明的变量返回了正确的值。这表明，let声明的变量只在它所在的代码块有效。 for循环的计..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"ECMA Script6"}],["meta",{"property":"article:published_time","content":"2020-06-07T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"let 和 const 命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-07T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"let 命令","slug":"let-命令","link":"#let-命令","children":[{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"不存在变量提升","slug":"不存在变量提升","link":"#不存在变量提升","children":[]},{"level":3,"title":"暂时性死区","slug":"暂时性死区","link":"#暂时性死区","children":[]},{"level":3,"title":"不允许重复声明","slug":"不允许重复声明","link":"#不允许重复声明","children":[]}]},{"level":2,"title":"块级作用域","slug":"块级作用域","link":"#块级作用域","children":[{"level":3,"title":"为什么需要块级作用域","slug":"为什么需要块级作用域","link":"#为什么需要块级作用域","children":[]},{"level":3,"title":"ES6 的块级作用域","slug":"es6-的块级作用域","link":"#es6-的块级作用域","children":[]},{"level":3,"title":"块级作用域与函数声明","slug":"块级作用域与函数声明","link":"#块级作用域与函数声明","children":[]}]},{"level":2,"title":"const 命令","slug":"const-命令","link":"#const-命令","children":[{"level":3,"title":"const 用法","slug":"const-用法","link":"#const-用法","children":[]},{"level":3,"title":"本质","slug":"本质","link":"#本质","children":[]},{"level":3,"title":"ES6 声明变量的六种方法","slug":"es6-声明变量的六种方法","link":"#es6-声明变量的六种方法","children":[]}]},{"level":2,"title":"顶层对象的属性","slug":"顶层对象的属性","link":"#顶层对象的属性","children":[]},{"level":2,"title":"global 对象","slug":"global-对象","link":"#global-对象","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":17.27,"words":5182},"filePathRelative":"zh/front-end/js-es/es6/let.md","excerpt":"","autoDesc":true}');export{e as data};
