const t=JSON.parse('{"key":"v-069a6372","path":"/zh/front-end/js-es/js/js11.html","title":"11.类对象","lang":"zh-CN","frontmatter":{"icon":"js","category":"Web前端","tags":["JavaScript","Promise对象","JS异步","async与await"],"time":"2020-6-10","footer":"生命的广阔不经历磨难怎能达到","title":"11.类对象","description":"类对象 class用法跟let和const一样，不存在变量提升,也不能重复声明类名,JS中的类(class)是在ES6中被推出为关键字,实际上也是通过原型构成的模拟类 ES5面对对象写法和传统的面向对象语言(如C++和JAVA)差异很大,很容易让新学习这门语言的人感到困惑。所以在ES6中提供了更接近传统语言的写法,引入了class这个概念,作为对象的模...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/front-end/js-es/js/js11.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"11.类对象"}],["meta",{"property":"og:description","content":"类对象 class用法跟let和const一样，不存在变量提升,也不能重复声明类名,JS中的类(class)是在ES6中被推出为关键字,实际上也是通过原型构成的模拟类 ES5面对对象写法和传统的面向对象语言(如C++和JAVA)差异很大,很容易让新学习这门语言的人感到困惑。所以在ES6中提供了更接近传统语言的写法,引入了class这个概念,作为对象的模..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"Promise对象"}],["meta",{"property":"article:tag","content":"JS异步"}],["meta",{"property":"article:tag","content":"async与await"}],["meta",{"property":"article:published_time","content":"2020-06-09T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11.类对象\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-09T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"类对象","slug":"类对象","link":"#类对象","children":[{"level":3,"title":"11.1 用法","slug":"_11-1-用法","link":"#_11-1-用法","children":[]},{"level":3,"title":"11.2 静态方法","slug":"_11-2-静态方法","link":"#_11-2-静态方法","children":[]},{"level":3,"title":"11.3 继承","slug":"_11-3-继承","link":"#_11-3-继承","children":[]},{"level":3,"title":"11.4 super","slug":"_11-4-super","link":"#_11-4-super","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.46,"words":1338},"filePathRelative":"zh/front-end/js-es/js/js11.md","excerpt":"","autoDesc":true}');export{t as data};
