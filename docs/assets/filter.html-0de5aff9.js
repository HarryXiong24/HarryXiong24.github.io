const t=JSON.parse('{"key":"v-57087d82","path":"/zh/python/functional-programming/high-order-function/filter.html","title":"filter","lang":"zh-CN","frontmatter":{"title":"filter","icon":"filter","time":"2020-6-7","category":"Python","tag":"Python","description":"Python 内建的 filter() 函数用于过滤序列。 和 map() 类似，filter() 也接收一个函数和一个序列。和 map() 不同的是，filter() 把传入的函数依次作用于每个元素，然后根据返回值是 True 还是 False 决定保留还是丢弃该元素。 例如，在一个 list 中，删掉偶数，只保留奇数，可以这么写: 把一个序列中的空...","head":[["meta",{"property":"og:url","content":"https://harryxiong24.github.io/zh/python/functional-programming/high-order-function/filter.html"}],["meta",{"property":"og:site_name","content":"Harry Xiong"}],["meta",{"property":"og:title","content":"filter"}],["meta",{"property":"og:description","content":"Python 内建的 filter() 函数用于过滤序列。 和 map() 类似，filter() 也接收一个函数和一个序列。和 map() 不同的是，filter() 把传入的函数依次作用于每个元素，然后根据返回值是 True 还是 False 决定保留还是丢弃该元素。 例如，在一个 list 中，删掉偶数，只保留奇数，可以这么写: 把一个序列中的空..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Harry Xiong"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2020-06-06T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"filter\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-06T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Harry Xiong\\",\\"url\\":\\"https://harryxiong24.github.io\\"}]}"]]},"headers":[{"level":2,"title":"用 filter 求素数","slug":"用-filter-求素数","link":"#用-filter-求素数","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.6,"words":781},"filePathRelative":"zh/python/functional-programming/high-order-function/filter.md","excerpt":"","autoDesc":true}');export{t as data};
